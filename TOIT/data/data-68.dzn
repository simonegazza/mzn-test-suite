Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	1,1,1,1,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 384, 360, 584, 404, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 324, 357, 372, 974, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 324, 316, 748, 976, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 480, 432, 347, 692, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 472, 259, 791, 498, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 258, 300, 837, 767, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 489, 321, 653, 346, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 229, 447, 594, 226, 1, 0, 0, 95, MAX_RBOUNDS,
  8, 430, 478, 876, 854, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 217, 358, 286, 629, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 376, 361, 468, 393, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 352, 394, 230, 812, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 242, 305, 929, 854, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 282, 368, 483, 537, 0, 0, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 50316, 918663, 16308, 14264, 1, 0, 1, 99, 0,
  32, 22171, 410692, 11458, 12996, 0, 1, 1, 98, 0,
  16, 25819, 196904, 19209, 21600, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 6, 16, 0, 0, 0, 0, 0, 0, 0,
  13, 9, 18, 0, 0, 0, 0, 0, 0, 0,
  18, 10, 19, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  4, 18, 20, 0, 0, 0, 0, 0, 0, 0,
  19, 50, 31, 0, 0, 0, 0, 0, 0, 0,
  25, 47, 28, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 61120;
carbBudget = 43680;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 5, 8,
  1, 4, 8,
  5, 6, 9,
  1, 7, 8,
  2, 3, 8,
  3, 6, 9,
  4, 8, 9,
]);

