Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,1,1,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  8, 419, 303, 787, 871, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 318, 332, 711, 933, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 227, 362, 512, 778, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 371, 338, 335, 480, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 221, 278, 770, 607, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 263, 260, 507, 909, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 433, 358, 458, 336, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 478, 459, 202, 218, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 345, 223, 390, 729, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 384, 302, 596, 303, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 460, 381, 899, 568, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 252, 246, 424, 652, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 309, 307, 726, 360, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 218, 304, 524, 488, 1, 0, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 111296, 638982, 14091, 17038, 1, 0, 1, 99, 0,
  16, 71786, 72177, 17655, 11206, 1, 1, 1, 98, 0,
  32, 22884, 766606, 12242, 22478, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 7, 17, 0, 0, 0, 0, 0, 0, 0,
  16, 8, 17, 0, 0, 0, 0, 0, 0, 0,
  12, 9, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  29, 42, 28, 0, 0, 0, 0, 0, 0, 0,
  30, 10, 38, 0, 0, 0, 0, 0, 0, 0,
  16, 47, 31, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 46209;
carbBudget = 53804;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 9,
  3, 6, 9,
  4, 6, 8,
  2, 3, 6,
  3, 4, 6,
  4, 6, 9,
  2, 4, 8,
]);

