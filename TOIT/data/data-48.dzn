Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 330, 410, 388, 346, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 273, 434, 466, 310, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 209, 276, 613, 499, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 245, 393, 202, 524, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 411, 254, 214, 475, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 342, 422, 227, 524, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 312, 232, 694, 646, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 236, 361, 635, 930, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 335, 366, 398, 481, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 318, 327, 815, 850, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 200, 322, 967, 790, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 358, 256, 387, 284, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 226, 325, 965, 317, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 217, 345, 367, 724, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 348, 340, 597, 862, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 450, 221, 213, 381, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 262, 496, 290, 230, 1, 0, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 108833, 223580, 21317, 24801, 0, 1, 1, 99, 0,
  16, 16262, 772973, 22074, 19871, 1, 1, 0, 98, 0,
  16, 50961, 581304, 17096, 14890, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 9, 17, 0, 0, 0, 0, 0, 0, 0,
  14, 10, 16, 0, 0, 0, 0, 0, 0, 0,
  15, 10, 20, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 19, 38, 0, 0, 0, 0, 0, 0, 0,
  15, 50, 48, 0, 0, 0, 0, 0, 0, 0,
  31, 22, 30, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 56846;
carbBudget = 47268;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 9,
  3, 4, 8,
  2, 5, 8,
  2, 4, 7,
  5, 8, 9,
  6, 8, 9,
  4, 5, 6,
  2, 3, 4,
]);

