Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,1,1,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 285, 400, 851, 704, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 228, 347, 726, 919, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 372, 205, 791, 859, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 232, 327, 889, 694, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 301, 419, 643, 971, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 437, 484, 831, 554, 0, 0, 1, 95, MAX_RBOUNDS,
  4, 266, 326, 549, 362, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 364, 450, 351, 760, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 329, 469, 369, 722, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 272, 335, 427, 656, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 276, 220, 556, 309, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 276, 215, 560, 770, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 352, 295, 823, 381, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 496, 256, 339, 693, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 297, 350, 352, 299, 1, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 81437, 178633, 13322, 21076, 1, 1, 0, 98, 0,
  32, 107035, 706054, 11215, 18582, 1, 1, 1, 99, 0,
  16, 59832, 456848, 10346, 22842, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 7, 19, 0, 0, 0, 0, 0, 0, 0,
  15, 5, 23, 0, 0, 0, 0, 0, 0, 0,
  10, 10, 19, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  46, 35, 8, 0, 0, 0, 0, 0, 0, 0,
  12, 44, 34, 0, 0, 0, 0, 0, 0, 0,
  48, 50, 10, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 49152;
carbBudget = 62068;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 6,
  3, 5, 9,
  1, 2, 8,
  3, 4, 7,
  1, 3, 7,
  1, 4, 6,
  2, 5, 6,
]);

