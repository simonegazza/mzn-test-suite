Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
	1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 314, 247, 760, 328, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 446, 379, 671, 871, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 270, 354, 803, 416, 0, 0, 0, 97, MAX_RBOUNDS,
  4, 212, 495, 791, 324, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 485, 241, 402, 855, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 376, 270, 643, 637, 0, 1, 1, 97, MAX_RBOUNDS,
  8, 347, 243, 627, 696, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 246, 344, 257, 357, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 419, 281, 529, 740, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 395, 321, 879, 632, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 477, 354, 442, 418, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 481, 448, 786, 318, 0, 1, 1, 95, MAX_RBOUNDS,
  4, 449, 366, 495, 315, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 280, 257, 636, 266, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 343, 260, 338, 890, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 264, 423, 745, 643, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 389, 455, 686, 589, 1, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 66211, 317468, 10547, 16864, 1, 1, 1, 98, 0,
  16, 98287, 860805, 17396, 24465, 1, 0, 1, 99, 0,
  32, 25661, 448432, 23839, 14301, 1, 1, 1, 98, 0,
  8, 83438, 883604, 10987, 18139, 1, 0, 0, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 9, 21, 0, 0, 0, 0, 0, 0, 0,
  10, 7, 22, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 24, 0, 0, 0, 0, 0, 0, 0,
  18, 7, 20, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  27, 4, 16, 0, 0, 0, 0, 0, 0, 0,
  19, 29, 6, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 26, 0, 0, 0, 0, 0, 0, 0,
  37, 26, 14, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 78148;
carbBudget = 48206;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 5, 9,
  4, 5, 6,
  1, 8, 9,
  4, 6, 9,
  3, 7, 9,
  4, 6, 7,
  5, 6, 9,
  2, 3, 9,
]);

