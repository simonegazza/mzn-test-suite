Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 259, 365, 408, 704, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 214, 382, 766, 465, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 400, 260, 203, 744, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 274, 313, 681, 268, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 482, 352, 381, 815, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 396, 371, 837, 586, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 266, 328, 372, 693, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 391, 374, 438, 242, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 418, 269, 215, 548, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 480, 367, 908, 841, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 354, 482, 913, 461, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 471, 486, 413, 747, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 471, 225, 295, 394, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 242, 458, 600, 543, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 283, 285, 278, 242, 1, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 86073, 611198, 18883, 15441, 1, 1, 1, 98, 0,
  32, 37378, 191669, 15514, 11265, 1, 1, 1, 98, 0,
  16, 104728, 386632, 24056, 14920, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 5, 24, 0, 0, 0, 0, 0, 0, 0,
  19, 10, 22, 0, 0, 0, 0, 0, 0, 0,
  20, 8, 21, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  34, 26, 41, 0, 0, 0, 0, 0, 0, 0,
  3, 41, 10, 0, 0, 0, 0, 0, 0, 0,
  27, 29, 9, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 36432;
carbBudget = 56036;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 5, 6,
  1, 2, 5,
  3, 6, 9,
  3, 4, 8,
  3, 4, 6,
  2, 7, 9,
  5, 7, 9,
]);

