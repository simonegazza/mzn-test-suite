Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 365, 379, 276, 848, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 236, 288, 411, 234, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 221, 394, 761, 440, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 373, 496, 989, 961, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 273, 435, 672, 983, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 467, 458, 838, 287, 0, 1, 0, 96, MAX_RBOUNDS,
  4, 325, 427, 479, 831, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 455, 426, 879, 276, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 353, 273, 443, 942, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 289, 236, 371, 598, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 479, 362, 703, 406, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 405, 326, 814, 846, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 78933, 283479, 24735, 10829, 1, 1, 1, 99, 0,
  32, 98909, 949264, 15946, 22320, 1, 1, 1, 98, 0,
  16, 21996, 771542, 15644, 20197, 1, 1, 0, 98, 0,
  16, 102041, 547942, 17023, 16072, 1, 0, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 9, 24, 0, 0, 0, 0, 0, 0, 0,
  16, 10, 20, 0, 0, 0, 0, 0, 0, 0,
  19, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  19, 5, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  5, 46, 33, 0, 0, 0, 0, 0, 0, 0,
  1, 2, 41, 0, 0, 0, 0, 0, 0, 0,
  20, 15, 47, 0, 0, 0, 0, 0, 0, 0,
  6, 5, 49, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 30271;
carbBudget = 59444;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 8,
  4, 7, 9,
  4, 7, 9,
  2, 3, 6,
  1, 2, 4,
  2, 7, 9,
]);

