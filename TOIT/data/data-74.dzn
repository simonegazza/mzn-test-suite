Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 429, 349, 389, 499, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 352, 316, 247, 980, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 467, 208, 991, 398, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 296, 463, 201, 300, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 287, 289, 790, 872, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 483, 430, 510, 700, 0, 1, 1, 95, MAX_RBOUNDS,
  8, 321, 315, 524, 581, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 373, 410, 470, 249, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 379, 311, 456, 584, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 429, 243, 232, 963, 1, 1, 0, 96, MAX_RBOUNDS,
  4, 273, 458, 345, 498, 1, 0, 1, 97, MAX_RBOUNDS,
  4, 361, 430, 869, 827, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 455, 309, 418, 220, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 214, 500, 247, 238, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 275, 208, 991, 564, 0, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 109121, 630458, 23927, 14928, 0, 1, 1, 98, 0,
  8, 58410, 135467, 12800, 24292, 1, 1, 1, 99, 0,
  32, 72934, 573494, 12866, 17335, 1, 1, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 5, 23, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 19, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 23, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  31, 36, 33, 0, 0, 0, 0, 0, 0, 0,
  33, 1, 34, 0, 0, 0, 0, 0, 0, 0,
  38, 50, 26, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 54189;
carbBudget = 56796;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 7,
  4, 8, 9,
  1, 2, 4,
  1, 4, 8,
  4, 6, 7,
  6, 8, 9,
  4, 6, 8,
]);

