Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 455, 376, 866, 566, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 291, 234, 373, 538, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 485, 277, 902, 638, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 273, 224, 878, 821, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 260, 440, 366, 277, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 454, 296, 389, 732, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 447, 357, 881, 862, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 483, 204, 799, 643, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 239, 404, 772, 793, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 491, 221, 900, 347, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 444, 229, 548, 475, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 262, 445, 635, 204, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 382, 214, 795, 342, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 223, 206, 907, 799, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 427, 469, 691, 875, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 224, 460, 650, 952, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 311, 456, 743, 252, 1, 0, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 48806, 531852, 15884, 15828, 1, 1, 1, 99, 0,
  32, 119073, 682759, 13079, 21659, 1, 1, 1, 99, 0,
  16, 91709, 477013, 12806, 13468, 1, 1, 1, 99, 0,
  16, 90143, 561583, 17856, 14769, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 9, 17, 0, 0, 0, 0, 0, 0, 0,
  19, 8, 16, 0, 0, 0, 0, 0, 0, 0,
  17, 5, 22, 0, 0, 0, 0, 0, 0, 0,
  16, 7, 20, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 38, 2, 0, 0, 0, 0, 0, 0, 0,
  11, 23, 41, 0, 0, 0, 0, 0, 0, 0,
  32, 22, 7, 0, 0, 0, 0, 0, 0, 0,
  27, 40, 31, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 79890;
carbBudget = 64376;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 4, 5,
  3, 5, 7,
  2, 5, 8,
  2, 3, 5,
  2, 6, 9,
  3, 5, 8,
  2, 8, 9,
  2, 6, 8,
]);

