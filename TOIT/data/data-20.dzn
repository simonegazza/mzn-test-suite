Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 279, 226, 273, 323, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 215, 283, 700, 333, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 240, 212, 271, 517, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 333, 243, 359, 458, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 323, 371, 898, 399, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 335, 466, 376, 686, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 499, 327, 673, 759, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 260, 430, 872, 665, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 247, 303, 934, 614, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 230, 388, 346, 818, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 403, 473, 507, 218, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 384, 347, 786, 757, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 308, 335, 822, 540, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 288, 301, 514, 734, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 241, 480, 338, 847, 0, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 54929, 687078, 11738, 17993, 1, 1, 1, 99, 0,
  32, 107379, 437595, 15204, 18791, 1, 1, 1, 98, 0,
  32, 26425, 108517, 17945, 20220, 1, 1, 1, 99, 0,
  16, 121266, 981185, 19329, 10769, 1, 0, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 8, 16, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 25, 0, 0, 0, 0, 0, 0, 0,
  19, 7, 18, 0, 0, 0, 0, 0, 0, 0,
  18, 5, 25, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 1, 34, 0, 0, 0, 0, 0, 0, 0,
  38, 17, 26, 0, 0, 0, 0, 0, 0, 0,
  21, 45, 9, 0, 0, 0, 0, 0, 0, 0,
  36, 31, 17, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 68624;
carbBudget = 58761;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 5, 8,
  3, 4, 6,
  1, 2, 4,
  2, 3, 5,
  5, 7, 8,
  3, 7, 9,
  6, 7, 9,
]);

