Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 368, 361, 398, 642, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 402, 328, 289, 630, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 345, 365, 474, 246, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 465, 412, 524, 352, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 240, 206, 362, 727, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 297, 480, 658, 754, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 307, 499, 825, 872, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 435, 210, 636, 520, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 386, 260, 572, 944, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 261, 399, 241, 681, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 320, 254, 406, 749, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 293, 373, 953, 838, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 491, 353, 846, 325, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 252, 220, 577, 254, 0, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 35533, 870878, 23534, 19983, 1, 0, 1, 98, 0,
  16, 22004, 883025, 21570, 20731, 1, 1, 1, 99, 0,
  32, 39266, 436099, 16896, 17051, 1, 1, 1, 98, 0,
  16, 81646, 918202, 11191, 22703, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  17, 5, 20, 0, 0, 0, 0, 0, 0, 0,
  18, 6, 25, 0, 0, 0, 0, 0, 0, 0,
  19, 5, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  21, 36, 8, 0, 0, 0, 0, 0, 0, 0,
  16, 9, 13, 0, 0, 0, 0, 0, 0, 0,
  32, 4, 2, 0, 0, 0, 0, 0, 0, 0,
  1, 47, 36, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 59638;
carbBudget = 44525;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 6, 8,
  6, 7, 9,
  1, 2, 5,
  2, 5, 6,
  1, 7, 9,
  2, 7, 8,
  2, 6, 7,
]);

