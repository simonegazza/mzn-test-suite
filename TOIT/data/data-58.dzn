Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 336, 263, 494, 271, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 308, 299, 802, 843, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 449, 307, 935, 471, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 359, 258, 231, 244, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 294, 267, 464, 553, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 276, 225, 216, 829, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 483, 262, 513, 328, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 468, 219, 754, 495, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 402, 327, 223, 554, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 249, 227, 840, 537, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 295, 432, 979, 842, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 409, 270, 212, 418, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 304, 337, 479, 734, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 499, 480, 881, 482, 0, 1, 0, 97, MAX_RBOUNDS,
  4, 382, 275, 477, 583, 0, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 52609, 755798, 20618, 20308, 1, 1, 0, 99, 0,
  16, 119062, 724076, 21157, 24773, 0, 1, 1, 98, 0,
  16, 26309, 827881, 13919, 17456, 1, 1, 0, 99, 0,
  32, 122146, 498110, 10308, 24160, 1, 0, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 10, 18, 0, 0, 0, 0, 0, 0, 0,
  14, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  13, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 22, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  24, 6, 18, 0, 0, 0, 0, 0, 0, 0,
  45, 14, 38, 0, 0, 0, 0, 0, 0, 0,
  24, 45, 7, 0, 0, 0, 0, 0, 0, 0,
  30, 5, 49, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 63286;
carbBudget = 61759;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 6, 7,
  5, 6, 7,
  2, 4, 6,
  1, 5, 8,
  5, 7, 8,
  1, 5, 8,
  5, 7, 8,
]);

