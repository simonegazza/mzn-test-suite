Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 317, 375, 781, 282, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 358, 452, 674, 913, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 448, 500, 616, 530, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 333, 222, 931, 389, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 243, 301, 659, 430, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 429, 283, 905, 604, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 329, 329, 550, 245, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 364, 362, 776, 844, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 364, 341, 983, 752, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 300, 331, 916, 584, 0, 1, 0, 96, MAX_RBOUNDS,
  4, 450, 285, 258, 797, 0, 0, 1, 97, MAX_RBOUNDS,
  4, 489, 305, 940, 424, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 421, 485, 820, 701, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 419, 486, 392, 949, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 210, 444, 719, 591, 1, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 59612, 595215, 16533, 15788, 1, 1, 1, 98, 0,
  16, 18984, 259663, 14436, 21501, 1, 1, 0, 98, 0,
  16, 112760, 930588, 12878, 14574, 0, 1, 0, 98, 0,
  16, 17676, 404932, 20576, 24710, 1, 0, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 9, 16, 0, 0, 0, 0, 0, 0, 0,
  11, 6, 23, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 49, 46, 0, 0, 0, 0, 0, 0, 0,
  6, 48, 4, 0, 0, 0, 0, 0, 0, 0,
  47, 32, 37, 0, 0, 0, 0, 0, 0, 0,
  5, 50, 38, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 62831;
carbBudget = 57224;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 7, 8,
  2, 4, 5,
  5, 7, 8,
  3, 5, 8,
  1, 3, 6,
  3, 4, 7,
  2, 4, 6,
]);

