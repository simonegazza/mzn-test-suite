Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 308, 292, 438, 293, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 303, 411, 232, 599, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 239, 308, 848, 393, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 355, 284, 825, 442, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 446, 311, 574, 230, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 292, 444, 616, 533, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 371, 378, 393, 223, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 464, 290, 386, 393, 0, 1, 1, 95, MAX_RBOUNDS,
  4, 413, 392, 226, 627, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 247, 310, 763, 272, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 448, 387, 710, 536, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 469, 452, 403, 387, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 493, 436, 800, 548, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 425, 470, 579, 421, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 442, 304, 876, 599, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 352, 215, 779, 655, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 217, 201, 823, 743, 1, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 106669, 289578, 20346, 18308, 1, 1, 1, 99, 0,
  8, 104975, 434157, 19566, 17800, 1, 1, 1, 99, 0,
  32, 31422, 644935, 11711, 16536, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 7, 21, 0, 0, 0, 0, 0, 0, 0,
  11, 9, 20, 0, 0, 0, 0, 0, 0, 0,
  16, 8, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  45, 47, 7, 0, 0, 0, 0, 0, 0, 0,
  35, 45, 26, 0, 0, 0, 0, 0, 0, 0,
  42, 33, 24, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 64467;
carbBudget = 40873;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 7, 9,
  2, 6, 9,
  1, 8, 9,
  3, 5, 8,
  5, 6, 7,
  1, 4, 9,
  1, 6, 9,
  2, 4, 6,
]);

