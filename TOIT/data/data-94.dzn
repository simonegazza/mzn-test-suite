Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 280, 472, 748, 744, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 402, 349, 738, 868, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 433, 426, 513, 523, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 491, 325, 521, 665, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 418, 434, 543, 902, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 462, 500, 362, 858, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 260, 243, 842, 872, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 374, 252, 557, 797, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 265, 413, 849, 221, 0, 0, 1, 97, MAX_RBOUNDS,
  8, 267, 448, 968, 374, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 396, 447, 976, 705, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 259, 397, 671, 774, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 266, 362, 357, 614, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 317, 355, 899, 388, 0, 0, 1, 96, MAX_RBOUNDS,
  8, 455, 369, 991, 469, 1, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 87147, 525672, 13895, 12074, 1, 1, 1, 98, 0,
  16, 88364, 233052, 21911, 24455, 1, 0, 1, 98, 0,
  16, 36910, 750726, 24760, 23205, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  11, 8, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 8, 24, 0, 0, 0, 0, 0, 0, 0,
  11, 7, 25, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  48, 19, 15, 0, 0, 0, 0, 0, 0, 0,
  8, 20, 3, 0, 0, 0, 0, 0, 0, 0,
  12, 5, 50, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 68621;
carbBudget = 52302;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 7,
  2, 4, 8,
  1, 8, 9,
  1, 3, 8,
  1, 3, 5,
  1, 2, 7,
  1, 3, 8,
]);

