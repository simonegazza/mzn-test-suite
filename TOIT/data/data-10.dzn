Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 269, 334, 736, 283, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 214, 312, 654, 621, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 346, 248, 436, 464, 0, 1, 0, 97, MAX_RBOUNDS,
  4, 277, 340, 243, 411, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 354, 418, 640, 600, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 439, 500, 628, 867, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 443, 311, 530, 947, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 225, 327, 877, 900, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 402, 203, 969, 832, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 452, 424, 247, 571, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 219, 368, 702, 553, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 398, 374, 288, 430, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 273, 448, 653, 204, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 328, 301, 848, 484, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 301, 243, 385, 698, 0, 0, 0, 96, MAX_RBOUNDS,
  4, 491, 349, 705, 345, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 461, 480, 583, 559, 0, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 120609, 403773, 19534, 18135, 1, 1, 1, 98, 0,
  32, 85902, 173621, 19288, 14262, 1, 1, 1, 98, 0,
  16, 64826, 768937, 23518, 19632, 1, 1, 1, 99, 0,
  16, 70289, 776940, 13594, 10939, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 7, 16, 0, 0, 0, 0, 0, 0, 0,
  12, 5, 22, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 23, 0, 0, 0, 0, 0, 0, 0,
  15, 7, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  46, 22, 38, 0, 0, 0, 0, 0, 0, 0,
  10, 16, 13, 0, 0, 0, 0, 0, 0, 0,
  7, 17, 8, 0, 0, 0, 0, 0, 0, 0,
  46, 45, 34, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 67107;
carbBudget = 51380;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 7,
  3, 7, 9,
  4, 8, 9,
  2, 4, 7,
  2, 4, 8,
  1, 7, 9,
  2, 6, 9,
  2, 7, 8,
]);

