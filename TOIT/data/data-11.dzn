Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 459, 287, 729, 848, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 468, 378, 669, 684, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 238, 270, 210, 722, 1, 0, 1, 97, MAX_RBOUNDS,
  4, 456, 295, 843, 644, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 443, 318, 415, 257, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 389, 318, 903, 535, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 397, 365, 309, 847, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 234, 225, 833, 352, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 240, 465, 541, 716, 0, 1, 0, 96, MAX_RBOUNDS,
  4, 382, 453, 313, 528, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 438, 490, 565, 505, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 428, 359, 475, 491, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 358, 229, 359, 901, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 255, 444, 577, 486, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 80495, 235450, 23016, 23077, 1, 1, 1, 99, 0,
  32, 75660, 518236, 22812, 13471, 1, 1, 1, 99, 0,
  16, 19862, 677329, 12596, 20739, 1, 1, 1, 98, 0,
  32, 90364, 501055, 15434, 22358, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 6, 21, 0, 0, 0, 0, 0, 0, 0,
  18, 5, 17, 0, 0, 0, 0, 0, 0, 0,
  18, 10, 18, 0, 0, 0, 0, 0, 0, 0,
  12, 7, 21, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  44, 25, 12, 0, 0, 0, 0, 0, 0, 0,
  50, 34, 34, 0, 0, 0, 0, 0, 0, 0,
  26, 10, 5, 0, 0, 0, 0, 0, 0, 0,
  24, 21, 39, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 45739;
carbBudget = 59061;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 9,
  2, 4, 7,
  3, 6, 9,
  1, 5, 7,
  4, 5, 7,
  2, 3, 7,
  5, 7, 9,
]);

