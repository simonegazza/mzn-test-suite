Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 273, 276, 554, 254, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 314, 249, 857, 952, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 378, 444, 477, 499, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 343, 424, 274, 238, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 281, 428, 313, 763, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 469, 398, 229, 598, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 471, 264, 252, 581, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 450, 400, 688, 775, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 217, 255, 796, 235, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 309, 410, 541, 420, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 222, 389, 332, 346, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 479, 294, 998, 410, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 418, 442, 897, 705, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 426, 449, 948, 286, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 432, 426, 601, 922, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 358, 339, 451, 453, 0, 1, 1, 95, MAX_RBOUNDS,
  4, 395, 256, 917, 551, 0, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 34696, 82001, 23340, 22385, 1, 1, 1, 99, 0,
  32, 88486, 907957, 12510, 11467, 1, 1, 1, 99, 0,
  16, 55817, 799813, 18113, 11028, 1, 0, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 6, 20, 0, 0, 0, 0, 0, 0, 0,
  16, 6, 23, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 44, 46, 0, 0, 0, 0, 0, 0, 0,
  12, 2, 36, 0, 0, 0, 0, 0, 0, 0,
  12, 20, 26, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 53628;
carbBudget = 72464;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 9,
  1, 4, 9,
  4, 5, 6,
  4, 5, 7,
  3, 4, 7,
  1, 2, 4,
  2, 6, 7,
  2, 3, 5,
]);

