Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 407, 475, 691, 463, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 369, 248, 965, 770, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 348, 246, 542, 677, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 339, 498, 721, 481, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 410, 291, 786, 875, 1, 0, 1, 97, MAX_RBOUNDS,
  4, 246, 494, 245, 560, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 438, 367, 1000, 391, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 231, 305, 535, 823, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 477, 335, 617, 397, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 221, 447, 868, 442, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 452, 210, 389, 261, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 286, 287, 422, 994, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 261, 349, 895, 656, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 239, 491, 775, 459, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 250, 381, 557, 259, 1, 0, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 44158, 667390, 18053, 13406, 1, 0, 1, 98, 0,
  32, 56520, 230634, 14567, 17092, 1, 1, 0, 99, 0,
  16, 26354, 558258, 12309, 19708, 1, 1, 1, 98, 0,
  32, 67024, 973730, 20187, 16296, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 8, 25, 0, 0, 0, 0, 0, 0, 0,
  15, 10, 20, 0, 0, 0, 0, 0, 0, 0,
  16, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  14, 5, 22, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  43, 37, 18, 0, 0, 0, 0, 0, 0, 0,
  2, 48, 19, 0, 0, 0, 0, 0, 0, 0,
  33, 47, 21, 0, 0, 0, 0, 0, 0, 0,
  18, 40, 31, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 48872;
carbBudget = 59026;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 5,
  1, 3, 6,
  1, 5, 7,
  1, 3, 9,
  4, 7, 8,
  1, 2, 3,
  4, 5, 7,
]);

