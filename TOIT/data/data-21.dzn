Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 311, 378, 517, 376, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 341, 376, 741, 461, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 238, 481, 994, 514, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 214, 462, 633, 989, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 218, 297, 354, 1000, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 356, 403, 834, 485, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 269, 400, 430, 486, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 303, 371, 800, 759, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 211, 263, 742, 431, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 460, 489, 569, 446, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 259, 417, 278, 415, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 429, 223, 719, 803, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 421, 483, 291, 243, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 223, 405, 350, 841, 0, 0, 0, 97, MAX_RBOUNDS,
  4, 408, 376, 840, 604, 1, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 64141, 151835, 24589, 24636, 1, 0, 1, 98, 0,
  16, 101305, 997786, 17956, 12237, 1, 0, 1, 98, 0,
  32, 58730, 735398, 20287, 10908, 1, 1, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 22, 0, 0, 0, 0, 0, 0, 0,
  11, 9, 18, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  22, 2, 7, 0, 0, 0, 0, 0, 0, 0,
  25, 9, 6, 0, 0, 0, 0, 0, 0, 0,
  38, 33, 50, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 46567;
carbBudget = 36222;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 5, 7,
  4, 6, 9,
  2, 3, 9,
  1, 7, 8,
  3, 5, 7,
  2, 8, 9,
  3, 5, 8,
]);

