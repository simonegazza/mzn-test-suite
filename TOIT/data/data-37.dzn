Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 203, 238, 638, 662, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 358, 413, 769, 343, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 460, 295, 852, 678, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 375, 330, 872, 793, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 481, 388, 256, 449, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 200, 467, 543, 579, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 423, 321, 406, 835, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 228, 203, 382, 415, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 453, 430, 319, 868, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 272, 482, 230, 952, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 281, 470, 725, 614, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 289, 438, 260, 225, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 313, 316, 871, 916, 1, 0, 0, 95, MAX_RBOUNDS,
  8, 328, 493, 784, 711, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 405, 290, 752, 886, 1, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 75370, 551530, 18079, 17282, 1, 1, 1, 99, 0,
  8, 75170, 452904, 15959, 23015, 1, 0, 0, 98, 0,
  32, 120362, 802131, 14788, 22103, 0, 1, 1, 98, 0,
  16, 31456, 865925, 17695, 23950, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 10, 22, 0, 0, 0, 0, 0, 0, 0,
  12, 6, 25, 0, 0, 0, 0, 0, 0, 0,
  12, 8, 19, 0, 0, 0, 0, 0, 0, 0,
  10, 9, 25, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  1, 50, 6, 0, 0, 0, 0, 0, 0, 0,
  12, 36, 20, 0, 0, 0, 0, 0, 0, 0,
  40, 12, 26, 0, 0, 0, 0, 0, 0, 0,
  24, 40, 18, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 55143;
carbBudget = 55159;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 8,
  1, 5, 6,
  3, 7, 8,
  4, 6, 9,
  1, 2, 6,
  3, 4, 5,
  3, 4, 7,
]);

