Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,
	1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 292, 479, 820, 291, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 421, 238, 504, 601, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 230, 405, 599, 220, 1, 0, 1, 97, MAX_RBOUNDS,
  4, 415, 447, 292, 982, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 269, 353, 518, 773, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 370, 292, 862, 643, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 261, 426, 354, 693, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 476, 331, 703, 668, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 487, 344, 317, 810, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 234, 324, 227, 718, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 487, 384, 375, 359, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 405, 496, 566, 807, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 361, 235, 967, 571, 0, 1, 0, 96, MAX_RBOUNDS,
  8, 401, 328, 203, 650, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 219, 359, 712, 884, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 57223, 999182, 21282, 16708, 0, 1, 1, 99, 0,
  16, 95693, 153418, 12648, 18223, 1, 1, 1, 98, 0,
  16, 78657, 944271, 11866, 13478, 1, 0, 1, 98, 0,
  16, 52217, 693156, 13394, 22842, 1, 1, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 25, 0, 0, 0, 0, 0, 0, 0,
  19, 7, 19, 0, 0, 0, 0, 0, 0, 0,
  11, 7, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  41, 32, 26, 0, 0, 0, 0, 0, 0, 0,
  28, 24, 30, 0, 0, 0, 0, 0, 0, 0,
  33, 20, 38, 0, 0, 0, 0, 0, 0, 0,
  18, 13, 33, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 63097;
carbBudget = 61735;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 4, 5,
  2, 4, 6,
  1, 4, 7,
  1, 2, 5,
  3, 7, 9,
  1, 4, 5,
  4, 5, 6,
]);

