Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 360, 382, 768, 682, 0, 0, 1, 95, MAX_RBOUNDS,
  4, 340, 382, 829, 808, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 483, 265, 825, 629, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 301, 225, 937, 504, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 225, 224, 661, 575, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 252, 323, 512, 746, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 474, 494, 297, 532, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 498, 445, 236, 474, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 497, 213, 595, 718, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 454, 250, 326, 945, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 321, 452, 223, 385, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 333, 369, 790, 270, 1, 1, 0, 96, MAX_RBOUNDS,
  4, 264, 415, 348, 557, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 263, 494, 958, 749, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 364, 316, 773, 946, 1, 0, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 83776, 426053, 16114, 18353, 1, 1, 1, 99, 0,
  8, 109751, 80628, 22232, 22124, 1, 1, 1, 98, 0,
  16, 18271, 970739, 20347, 21408, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 5, 21, 0, 0, 0, 0, 0, 0, 0,
  17, 10, 24, 0, 0, 0, 0, 0, 0, 0,
  10, 5, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  9, 11, 44, 0, 0, 0, 0, 0, 0, 0,
  3, 15, 11, 0, 0, 0, 0, 0, 0, 0,
  50, 12, 6, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 49247;
carbBudget = 35535;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 6,
  5, 6, 9,
  1, 3, 8,
  2, 3, 8,
  1, 3, 4,
  4, 5, 7,
  1, 4, 5,
]);

