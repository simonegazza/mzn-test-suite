Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,1,1,0,0,0,0,0,
	1,1,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 388, 454, 465, 952, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 202, 498, 936, 502, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 470, 327, 428, 238, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 228, 367, 229, 327, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 313, 263, 879, 596, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 244, 204, 401, 987, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 315, 420, 839, 204, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 224, 499, 512, 267, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 284, 407, 527, 491, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 349, 296, 340, 770, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 469, 382, 743, 453, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 500, 428, 558, 296, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 82757, 739474, 11449, 18264, 1, 0, 1, 99, 0,
  32, 21603, 675010, 19612, 21464, 1, 1, 1, 98, 0,
  16, 73041, 42477, 20283, 14361, 1, 1, 1, 99, 0,
  32, 77276, 956507, 20341, 24824, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 8, 20, 0, 0, 0, 0, 0, 0, 0,
  18, 9, 18, 0, 0, 0, 0, 0, 0, 0,
  11, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  19, 6, 19, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 41, 28, 0, 0, 0, 0, 0, 0, 0,
  12, 2, 2, 0, 0, 0, 0, 0, 0, 0,
  49, 44, 39, 0, 0, 0, 0, 0, 0, 0,
  49, 12, 9, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 57400;
carbBudget = 50454;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 5, 7,
  4, 7, 8,
  1, 4, 9,
  2, 5, 6,
  3, 7, 8,
  2, 3, 8,
]);

