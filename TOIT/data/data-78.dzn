Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,1,1,0,1,1,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 472, 484, 778, 361, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 365, 300, 710, 924, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 401, 459, 364, 253, 0, 0, 1, 96, MAX_RBOUNDS,
  8, 427, 423, 522, 655, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 481, 382, 206, 893, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 351, 373, 477, 759, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 252, 397, 233, 613, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 480, 372, 320, 600, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 495, 210, 876, 712, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 359, 343, 767, 691, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 280, 444, 893, 585, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 206, 219, 225, 604, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 407, 417, 803, 221, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 496, 472, 246, 884, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 104323, 390842, 13117, 23934, 1, 1, 1, 98, 0,
  16, 45666, 41528, 12921, 24339, 1, 0, 1, 98, 0,
  16, 100720, 585291, 17477, 12210, 1, 1, 0, 99, 0,
  16, 59673, 509422, 11851, 14169, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 6, 19, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 23, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 17, 0, 0, 0, 0, 0, 0, 0,
  12, 9, 23, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  41, 1, 17, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 32, 0, 0, 0, 0, 0, 0, 0,
  11, 20, 50, 0, 0, 0, 0, 0, 0, 0,
  39, 45, 34, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 51487;
carbBudget = 36488;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 6, 9,
  1, 4, 9,
  2, 3, 8,
  1, 5, 9,
  3, 7, 9,
  1, 4, 6,
  5, 6, 9,
]);

