Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 234, 444, 924, 783, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 241, 205, 502, 813, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 304, 386, 363, 830, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 455, 338, 215, 604, 1, 0, 0, 96, MAX_RBOUNDS,
  8, 453, 400, 685, 989, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 374, 367, 606, 978, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 304, 445, 749, 373, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 383, 269, 259, 307, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 492, 266, 265, 718, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 239, 204, 370, 945, 0, 0, 0, 97, MAX_RBOUNDS,
  8, 276, 387, 838, 954, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 375, 366, 495, 403, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 438, 363, 866, 654, 0, 1, 1, 95, MAX_RBOUNDS,
  8, 335, 439, 403, 505, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 323, 395, 699, 920, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 34592, 917860, 24149, 11900, 1, 1, 1, 98, 0,
  16, 120833, 588399, 24310, 24857, 1, 0, 1, 99, 0,
  16, 108907, 675656, 19174, 11325, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  11, 9, 24, 0, 0, 0, 0, 0, 0, 0,
  11, 6, 16, 0, 0, 0, 0, 0, 0, 0,
  20, 10, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  32, 23, 4, 0, 0, 0, 0, 0, 0, 0,
  14, 19, 39, 0, 0, 0, 0, 0, 0, 0,
  11, 29, 47, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 46884;
carbBudget = 48773;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  7, 8, 9,
  1, 5, 7,
  1, 3, 5,
  2, 6, 8,
  4, 6, 7,
  2, 7, 8,
  1, 2, 5,
]);

