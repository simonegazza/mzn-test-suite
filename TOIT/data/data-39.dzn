Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,1,1,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 289, 349, 295, 930, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 220, 432, 430, 568, 1, 0, 0, 96, MAX_RBOUNDS,
  4, 294, 336, 296, 960, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 329, 320, 909, 205, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 230, 245, 991, 454, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 447, 321, 383, 537, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 451, 400, 390, 246, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 347, 331, 493, 259, 0, 1, 0, 97, MAX_RBOUNDS,
  8, 242, 306, 588, 285, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 347, 378, 784, 382, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 399, 288, 301, 792, 0, 1, 1, 95, MAX_RBOUNDS,
  4, 453, 449, 830, 918, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 311, 489, 723, 703, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 495, 338, 646, 464, 1, 0, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 53612, 181462, 12555, 19599, 1, 1, 1, 98, 0,
  32, 41592, 520497, 10434, 21948, 1, 1, 1, 99, 0,
  16, 52473, 542867, 22448, 21682, 1, 1, 1, 99, 0,
  16, 22949, 710254, 11489, 10741, 1, 1, 0, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  11, 6, 20, 0, 0, 0, 0, 0, 0, 0,
  19, 7, 22, 0, 0, 0, 0, 0, 0, 0,
  12, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  16, 7, 23, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  8, 12, 28, 0, 0, 0, 0, 0, 0, 0,
  17, 2, 39, 0, 0, 0, 0, 0, 0, 0,
  14, 50, 10, 0, 0, 0, 0, 0, 0, 0,
  7, 46, 37, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 52742;
carbBudget = 68725;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 6, 7,
  2, 5, 7,
  1, 5, 6,
  6, 7, 9,
  1, 5, 9,
  1, 2, 3,
  2, 5, 7,
]);

