Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 482, 400, 259, 416, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 292, 380, 489, 465, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 317, 412, 427, 284, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 281, 463, 370, 338, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 462, 392, 454, 597, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 459, 344, 667, 654, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 257, 455, 366, 208, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 358, 249, 875, 897, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 294, 426, 687, 620, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 497, 208, 893, 590, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 490, 270, 825, 476, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 220, 336, 842, 352, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 220, 470, 399, 790, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 290, 212, 933, 274, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 283, 429, 485, 907, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 215, 373, 808, 954, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 470, 403, 373, 561, 0, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 67110, 792417, 16640, 19361, 1, 1, 1, 99, 0,
  32, 125814, 165162, 11273, 21280, 1, 1, 1, 98, 0,
  16, 41752, 678117, 18594, 10887, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 9, 20, 0, 0, 0, 0, 0, 0, 0,
  19, 10, 25, 0, 0, 0, 0, 0, 0, 0,
  18, 10, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 49, 40, 0, 0, 0, 0, 0, 0, 0,
  43, 33, 22, 0, 0, 0, 0, 0, 0, 0,
  43, 37, 12, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 64433;
carbBudget = 77821;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 5,
  2, 4, 7,
  1, 3, 9,
  2, 3, 7,
  1, 4, 9,
  4, 7, 9,
  1, 5, 8,
  1, 2, 3,
]);

