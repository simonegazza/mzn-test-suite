Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 318, 229, 266, 411, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 474, 482, 516, 825, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 242, 359, 336, 532, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 253, 222, 784, 913, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 202, 407, 752, 545, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 332, 371, 864, 399, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 365, 206, 581, 256, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 472, 486, 653, 837, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 309, 293, 661, 409, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 302, 205, 318, 790, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 411, 387, 357, 318, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 450, 395, 265, 571, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 264, 435, 512, 924, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 374, 430, 747, 351, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 298, 296, 563, 794, 1, 0, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 20297, 359254, 16362, 17157, 1, 1, 1, 98, 0,
  16, 32392, 770666, 22246, 14505, 1, 1, 1, 98, 0,
  32, 106323, 517865, 19625, 15721, 1, 1, 1, 99, 0,
  16, 16898, 373378, 16264, 19349, 0, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 5, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 9, 18, 0, 0, 0, 0, 0, 0, 0,
  16, 5, 16, 0, 0, 0, 0, 0, 0, 0,
  18, 8, 22, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  4, 35, 9, 0, 0, 0, 0, 0, 0, 0,
  48, 31, 20, 0, 0, 0, 0, 0, 0, 0,
  28, 44, 8, 0, 0, 0, 0, 0, 0, 0,
  45, 10, 19, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 69186;
carbBudget = 36695;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 6, 8,
  2, 6, 8,
  2, 5, 9,
  3, 5, 7,
  1, 2, 7,
  2, 3, 4,
  1, 4, 7,
]);

