Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 242, 205, 638, 691, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 336, 372, 935, 755, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 476, 434, 567, 816, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 481, 320, 778, 724, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 337, 475, 700, 226, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 414, 274, 580, 948, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 321, 452, 205, 764, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 376, 406, 599, 408, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 333, 330, 202, 858, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 478, 324, 907, 946, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 420, 303, 994, 805, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 475, 398, 488, 487, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 277, 488, 971, 368, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 447, 398, 393, 650, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 207, 368, 519, 635, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 337, 499, 618, 270, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 416, 396, 200, 255, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 65761, 958982, 17942, 19067, 1, 1, 1, 99, 0,
  16, 27173, 730727, 15089, 16863, 1, 1, 1, 99, 0,
  32, 122283, 867250, 16702, 13111, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 9, 19, 0, 0, 0, 0, 0, 0, 0,
  16, 10, 23, 0, 0, 0, 0, 0, 0, 0,
  18, 6, 18, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  30, 35, 18, 0, 0, 0, 0, 0, 0, 0,
  19, 3, 19, 0, 0, 0, 0, 0, 0, 0,
  29, 36, 9, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 65545;
carbBudget = 52810;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 5, 6,
  1, 4, 7,
  4, 5, 6,
  2, 6, 9,
  1, 7, 9,
  2, 3, 9,
  1, 2, 8,
  2, 3, 7,
]);

