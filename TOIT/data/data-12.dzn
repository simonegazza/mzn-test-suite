Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 386, 487, 374, 323, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 448, 399, 791, 368, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 357, 210, 547, 294, 0, 0, 0, 96, MAX_RBOUNDS,
  8, 234, 457, 362, 649, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 235, 376, 726, 201, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 262, 271, 990, 618, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 429, 380, 655, 543, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 269, 256, 989, 870, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 230, 296, 867, 724, 1, 0, 0, 95, MAX_RBOUNDS,
  8, 474, 458, 737, 396, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 305, 243, 545, 361, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 411, 396, 711, 992, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 269, 309, 946, 637, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 435, 218, 640, 497, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 368, 351, 464, 386, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 425, 224, 609, 726, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 264, 427, 422, 883, 0, 0, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 66864, 615264, 11876, 13621, 1, 1, 1, 98, 0,
  16, 98691, 52547, 22484, 23743, 1, 1, 1, 99, 0,
  16, 37682, 502889, 20602, 16063, 1, 1, 1, 99, 0,
  16, 75502, 702263, 17368, 16012, 1, 1, 0, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  11, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 23, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 23, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  38, 28, 48, 0, 0, 0, 0, 0, 0, 0,
  38, 30, 28, 0, 0, 0, 0, 0, 0, 0,
  16, 44, 11, 0, 0, 0, 0, 0, 0, 0,
  43, 24, 39, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 52644;
carbBudget = 65148;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 5, 9,
  2, 7, 8,
  1, 4, 9,
  5, 6, 9,
  1, 2, 5,
  4, 6, 7,
  1, 7, 9,
  1, 3, 4,
]);

