Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 301, 394, 899, 837, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 355, 355, 331, 741, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 291, 404, 567, 818, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 244, 388, 901, 267, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 201, 482, 455, 638, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 401, 399, 793, 756, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 464, 380, 854, 876, 0, 0, 1, 97, MAX_RBOUNDS,
  4, 371, 321, 395, 355, 0, 0, 1, 96, MAX_RBOUNDS,
  4, 342, 300, 831, 527, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 334, 320, 587, 726, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 243, 207, 911, 560, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 420, 251, 536, 568, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 310, 482, 383, 724, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 386, 341, 470, 327, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 405, 237, 337, 924, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 487, 242, 815, 445, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 494, 298, 624, 729, 0, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 78334, 49172, 15961, 21593, 1, 1, 1, 98, 0,
  8, 33082, 572860, 17551, 10142, 1, 1, 0, 99, 0,
  16, 102929, 144904, 17524, 10320, 1, 0, 1, 99, 0,
  32, 109750, 129264, 10319, 19728, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 9, 19, 0, 0, 0, 0, 0, 0, 0,
  13, 9, 20, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 17, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  21, 22, 31, 0, 0, 0, 0, 0, 0, 0,
  49, 26, 39, 0, 0, 0, 0, 0, 0, 0,
  3, 8, 4, 0, 0, 0, 0, 0, 0, 0,
  46, 18, 49, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 49425;
carbBudget = 61323;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 3,
  1, 4, 7,
  3, 4, 7,
  5, 8, 9,
  3, 6, 7,
  4, 6, 9,
  2, 6, 9,
  1, 4, 6,
]);

