Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	1,1,1,1,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 494, 231, 349, 744, 0, 0, 1, 96, MAX_RBOUNDS,
  4, 360, 265, 588, 788, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 256, 371, 888, 988, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 289, 312, 411, 852, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 402, 284, 914, 957, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 385, 445, 685, 331, 0, 0, 1, 97, MAX_RBOUNDS,
  8, 253, 289, 223, 513, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 482, 484, 245, 412, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 283, 208, 405, 952, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 372, 405, 503, 994, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 337, 324, 795, 483, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 457, 318, 440, 530, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 344, 481, 913, 642, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 293, 373, 647, 611, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 381, 344, 395, 481, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 321, 401, 817, 433, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 499, 438, 731, 646, 0, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 74480, 155646, 13629, 11305, 1, 1, 1, 98, 0,
  16, 106805, 611460, 16832, 18648, 1, 1, 1, 98, 0,
  16, 68712, 198854, 20779, 22659, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  17, 8, 21, 0, 0, 0, 0, 0, 0, 0,
  20, 6, 25, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 24, 22, 0, 0, 0, 0, 0, 0, 0,
  21, 39, 8, 0, 0, 0, 0, 0, 0, 0,
  31, 48, 8, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 45220;
carbBudget = 71457;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 7, 9,
  2, 3, 8,
  3, 4, 5,
  3, 6, 7,
  2, 6, 9,
  2, 7, 9,
  3, 4, 9,
  2, 3, 7,
]);

