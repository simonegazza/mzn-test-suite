Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 408, 343, 597, 663, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 373, 450, 579, 676, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 414, 412, 258, 481, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 375, 320, 571, 422, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 234, 281, 791, 681, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 228, 354, 852, 718, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 436, 409, 921, 568, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 210, 213, 221, 659, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 331, 443, 913, 922, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 315, 324, 756, 382, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 227, 237, 456, 426, 0, 1, 0, 95, MAX_RBOUNDS,
  8, 295, 320, 655, 615, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 448, 277, 214, 730, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 377, 462, 507, 751, 1, 0, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 39530, 787739, 12846, 21171, 1, 1, 1, 99, 0,
  16, 105946, 814496, 18264, 17394, 1, 1, 1, 99, 0,
  8, 107129, 920450, 12443, 17216, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 7, 24, 0, 0, 0, 0, 0, 0, 0,
  11, 10, 15, 0, 0, 0, 0, 0, 0, 0,
  19, 5, 20, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 23, 26, 0, 0, 0, 0, 0, 0, 0,
  5, 39, 11, 0, 0, 0, 0, 0, 0, 0,
  48, 27, 36, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 65046;
carbBudget = 67303;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 9,
  1, 7, 8,
  3, 4, 7,
  1, 3, 5,
  1, 5, 6,
  1, 2, 4,
  1, 2, 9,
]);

