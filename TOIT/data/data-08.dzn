Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 369, 387, 495, 873, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 216, 264, 402, 272, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 439, 344, 883, 810, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 316, 434, 823, 871, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 230, 387, 234, 429, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 463, 449, 829, 842, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 249, 327, 573, 353, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 346, 310, 394, 640, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 286, 472, 956, 257, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 329, 424, 605, 248, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 275, 224, 479, 334, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 396, 390, 567, 507, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 282, 396, 393, 507, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 252, 242, 962, 593, 1, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 118599, 541891, 13681, 16792, 1, 1, 1, 98, 0,
  8, 95296, 753763, 13908, 17705, 1, 1, 1, 99, 0,
  32, 53568, 318542, 21944, 12550, 1, 1, 1, 98, 0,
  16, 119370, 919171, 18224, 21952, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 5, 19, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 20, 0, 0, 0, 0, 0, 0, 0,
  14, 7, 20, 0, 0, 0, 0, 0, 0, 0,
  17, 10, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  26, 1, 39, 0, 0, 0, 0, 0, 0, 0,
  33, 43, 9, 0, 0, 0, 0, 0, 0, 0,
  32, 47, 6, 0, 0, 0, 0, 0, 0, 0,
  24, 41, 23, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 66815;
carbBudget = 43046;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 8, 9,
  1, 8, 9,
  1, 5, 7,
  1, 5, 9,
  7, 8, 9,
  1, 8, 9,
  1, 7, 9,
]);

