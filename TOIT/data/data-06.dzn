Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  8, 472, 378, 872, 370, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 267, 353, 606, 543, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 439, 457, 841, 618, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 237, 455, 553, 226, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 408, 352, 380, 321, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 231, 348, 776, 969, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 306, 335, 828, 390, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 254, 303, 488, 443, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 451, 420, 994, 879, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 210, 260, 588, 389, 0, 1, 1, 97, MAX_RBOUNDS,
  8, 239, 210, 949, 567, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 443, 412, 530, 940, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 208, 482, 675, 988, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 466, 420, 998, 683, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 414, 219, 399, 702, 0, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 114943, 281537, 15521, 24076, 1, 1, 1, 99, 0,
  16, 102190, 852395, 11975, 13287, 1, 1, 1, 99, 0,
  32, 88351, 705102, 15369, 24030, 1, 1, 0, 99, 0,
  32, 22116, 538118, 10740, 15328, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  14, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  12, 5, 19, 0, 0, 0, 0, 0, 0, 0,
  18, 9, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  38, 8, 5, 0, 0, 0, 0, 0, 0, 0,
  21, 41, 37, 0, 0, 0, 0, 0, 0, 0,
  8, 20, 25, 0, 0, 0, 0, 0, 0, 0,
  43, 13, 20, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 53104;
carbBudget = 35314;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 8,
  3, 4, 6,
  1, 3, 6,
  3, 6, 7,
  4, 6, 8,
  1, 5, 7,
  1, 2, 9,
]);

