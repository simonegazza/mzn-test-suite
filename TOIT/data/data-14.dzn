Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 307, 429, 252, 595, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 407, 256, 835, 882, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 303, 350, 499, 820, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 342, 486, 864, 685, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 393, 344, 579, 483, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 288, 289, 858, 617, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 292, 380, 960, 664, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 336, 322, 257, 886, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 236, 207, 416, 598, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 435, 282, 361, 251, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 226, 207, 334, 726, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 434, 483, 694, 382, 0, 0, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 76972, 138797, 14813, 23982, 1, 0, 1, 99, 0,
  32, 39089, 801062, 10047, 12907, 1, 1, 1, 98, 0,
  8, 52944, 567456, 22458, 10088, 1, 1, 1, 99, 0,
  16, 79344, 579695, 12116, 12500, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 6, 22, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 19, 0, 0, 0, 0, 0, 0, 0,
  19, 8, 16, 0, 0, 0, 0, 0, 0, 0,
  10, 7, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  39, 34, 7, 0, 0, 0, 0, 0, 0, 0,
  3, 31, 32, 0, 0, 0, 0, 0, 0, 0,
  33, 38, 16, 0, 0, 0, 0, 0, 0, 0,
  30, 20, 17, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 57394;
carbBudget = 33571;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 4, 9,
  1, 7, 8,
  4, 5, 6,
  1, 3, 8,
  3, 5, 9,
  1, 2, 6,
]);

