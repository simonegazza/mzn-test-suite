Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  8, 455, 206, 528, 716, 0, 1, 1, 95, MAX_RBOUNDS,
  8, 233, 386, 324, 918, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 233, 403, 795, 760, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 380, 298, 209, 972, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 321, 296, 907, 442, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 336, 397, 347, 233, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 457, 387, 699, 917, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 283, 413, 869, 436, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 364, 496, 583, 753, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 256, 309, 445, 996, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 398, 227, 605, 409, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 292, 292, 517, 837, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 469, 467, 300, 497, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 225, 306, 253, 392, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 62380, 895615, 14481, 14596, 1, 0, 1, 99, 0,
  16, 23376, 486536, 20495, 14613, 1, 1, 1, 98, 0,
  32, 119089, 594682, 10280, 19655, 1, 1, 1, 99, 0,
  8, 21599, 619891, 17117, 19319, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 10, 25, 0, 0, 0, 0, 0, 0, 0,
  10, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  13, 8, 19, 0, 0, 0, 0, 0, 0, 0,
  18, 7, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  34, 23, 22, 0, 0, 0, 0, 0, 0, 0,
  27, 10, 26, 0, 0, 0, 0, 0, 0, 0,
  29, 18, 4, 0, 0, 0, 0, 0, 0, 0,
  22, 21, 49, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 68080;
carbBudget = 62701;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 9,
  2, 7, 8,
  2, 4, 5,
  1, 4, 7,
  6, 7, 9,
  1, 2, 7,
  4, 7, 9,
]);

