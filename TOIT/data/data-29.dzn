Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 304, 286, 511, 325, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 201, 269, 277, 608, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 357, 200, 262, 943, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 401, 333, 258, 763, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 335, 460, 971, 996, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 358, 464, 885, 560, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 255, 297, 847, 988, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 222, 216, 910, 896, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 282, 251, 431, 217, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 301, 342, 697, 516, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 394, 416, 821, 351, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 474, 235, 341, 832, 1, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 65664, 817783, 12812, 24436, 1, 1, 1, 99, 0,
  16, 61171, 824924, 24477, 23643, 1, 0, 1, 99, 0,
  16, 44752, 583944, 20297, 16029, 1, 1, 1, 99, 0,
  16, 27783, 193674, 23580, 19427, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 7, 19, 0, 0, 0, 0, 0, 0, 0,
  18, 10, 15, 0, 0, 0, 0, 0, 0, 0,
  11, 9, 25, 0, 0, 0, 0, 0, 0, 0,
  11, 5, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 35, 50, 0, 0, 0, 0, 0, 0, 0,
  22, 36, 32, 0, 0, 0, 0, 0, 0, 0,
  3, 5, 6, 0, 0, 0, 0, 0, 0, 0,
  5, 4, 38, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 33418;
carbBudget = 52040;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 8,
  4, 6, 8,
  2, 3, 8,
  4, 7, 9,
  2, 3, 6,
  3, 4, 5,
]);

