Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 466, 448, 476, 225, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 253, 243, 742, 252, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 328, 336, 793, 754, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 275, 278, 657, 744, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 309, 392, 828, 497, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 371, 275, 209, 704, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 229, 365, 747, 919, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 257, 365, 306, 510, 0, 1, 0, 96, MAX_RBOUNDS,
  4, 499, 419, 392, 928, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 269, 367, 510, 222, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 399, 276, 932, 391, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 411, 494, 387, 713, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 242, 391, 908, 484, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 409, 280, 595, 293, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 248, 252, 853, 922, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 400, 225, 617, 374, 1, 0, 1, 95, MAX_RBOUNDS,
  8, 351, 375, 736, 513, 1, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 126426, 579085, 21447, 15393, 1, 1, 1, 98, 0,
  32, 45415, 302292, 15092, 14558, 0, 0, 1, 99, 0,
  8, 35460, 725868, 13707, 18759, 1, 1, 0, 99, 0,
  32, 93130, 160169, 11534, 18223, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  14, 10, 20, 0, 0, 0, 0, 0, 0, 0,
  15, 7, 22, 0, 0, 0, 0, 0, 0, 0,
  15, 8, 24, 0, 0, 0, 0, 0, 0, 0,
  16, 9, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  48, 17, 3, 0, 0, 0, 0, 0, 0, 0,
  48, 26, 27, 0, 0, 0, 0, 0, 0, 0,
  45, 48, 6, 0, 0, 0, 0, 0, 0, 0,
  30, 40, 32, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 64582;
carbBudget = 73105;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 4, 5,
  5, 7, 9,
  6, 7, 8,
  1, 7, 9,
  7, 8, 9,
  2, 3, 7,
  4, 5, 7,
  3, 5, 7,
]);

