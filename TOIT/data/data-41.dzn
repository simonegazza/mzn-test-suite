Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 400, 381, 448, 663, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 319, 425, 377, 200, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 257, 493, 300, 670, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 205, 490, 718, 635, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 415, 494, 409, 828, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 264, 403, 465, 372, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 283, 368, 694, 597, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 424, 352, 842, 538, 0, 0, 1, 96, MAX_RBOUNDS,
  4, 430, 417, 486, 914, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 216, 252, 357, 855, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 500, 340, 432, 911, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 211, 314, 306, 370, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 340, 269, 219, 288, 1, 0, 1, 95, MAX_RBOUNDS,
  8, 448, 400, 688, 815, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 455, 314, 750, 476, 0, 0, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 50157, 846239, 13243, 13425, 1, 0, 0, 98, 0,
  32, 81523, 994114, 16589, 12374, 1, 0, 1, 98, 0,
  32, 68575, 968260, 16404, 12612, 1, 1, 1, 98, 0,
  32, 59685, 958444, 20940, 10802, 0, 1, 0, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  10, 5, 25, 0, 0, 0, 0, 0, 0, 0,
  13, 9, 17, 0, 0, 0, 0, 0, 0, 0,
  16, 5, 18, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 5, 7, 0, 0, 0, 0, 0, 0, 0,
  36, 17, 48, 0, 0, 0, 0, 0, 0, 0,
  7, 33, 43, 0, 0, 0, 0, 0, 0, 0,
  11, 15, 30, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 37558;
carbBudget = 49762;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 8, 9,
  1, 6, 7,
  1, 2, 5,
  1, 3, 7,
  2, 5, 8,
  2, 3, 7,
  2, 4, 6,
]);

