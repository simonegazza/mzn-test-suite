Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,1,1,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 352, 295, 766, 514, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 322, 396, 923, 428, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 210, 346, 269, 265, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 438, 356, 998, 231, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 498, 478, 740, 373, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 461, 472, 283, 746, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 254, 284, 397, 381, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 336, 287, 239, 615, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 339, 338, 445, 622, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 265, 291, 827, 356, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 425, 290, 485, 304, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 343, 210, 365, 749, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 344, 376, 940, 559, 1, 0, 1, 95, MAX_RBOUNDS,
  8, 492, 227, 365, 362, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 102337, 736216, 10697, 15607, 0, 1, 1, 99, 0,
  32, 92146, 104317, 16059, 12662, 0, 1, 1, 99, 0,
  16, 91549, 416526, 17774, 14696, 1, 0, 1, 98, 0,
  32, 94633, 913915, 11208, 22146, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  16, 7, 15, 0, 0, 0, 0, 0, 0, 0,
  18, 10, 24, 0, 0, 0, 0, 0, 0, 0,
  18, 6, 19, 0, 0, 0, 0, 0, 0, 0,
  10, 8, 21, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  6, 13, 34, 0, 0, 0, 0, 0, 0, 0,
  46, 40, 21, 0, 0, 0, 0, 0, 0, 0,
  15, 50, 35, 0, 0, 0, 0, 0, 0, 0,
  41, 39, 39, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 48559;
carbBudget = 53275;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 5,
  6, 8, 9,
  1, 6, 8,
  2, 3, 9,
  1, 2, 9,
  4, 6, 7,
  3, 8, 9,
]);

