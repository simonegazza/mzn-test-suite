Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 340, 244, 966, 485, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 446, 229, 389, 594, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 355, 469, 697, 330, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 254, 253, 649, 606, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 282, 306, 450, 497, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 457, 470, 726, 283, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 385, 319, 696, 832, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 471, 323, 299, 249, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 395, 268, 418, 618, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 307, 427, 841, 574, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 318, 491, 961, 728, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 318, 210, 362, 348, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 388, 414, 549, 236, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 419, 477, 851, 675, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 446, 320, 804, 925, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 285, 236, 918, 341, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 341, 349, 210, 342, 0, 0, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 85217, 388656, 11583, 20309, 1, 0, 1, 99, 0,
  16, 71100, 627786, 14284, 18347, 1, 1, 1, 98, 0,
  16, 59339, 582126, 22543, 21184, 0, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 7, 21, 0, 0, 0, 0, 0, 0, 0,
  10, 9, 21, 0, 0, 0, 0, 0, 0, 0,
  13, 9, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  32, 5, 47, 0, 0, 0, 0, 0, 0, 0,
  36, 41, 2, 0, 0, 0, 0, 0, 0, 0,
  20, 32, 27, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 73893;
carbBudget = 47037;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 6,
  5, 6, 7,
  4, 6, 8,
  1, 6, 8,
  1, 3, 6,
  1, 3, 4,
  1, 5, 7,
  1, 7, 8,
]);

