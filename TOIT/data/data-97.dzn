Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,
	1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 214, 234, 217, 799, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 500, 410, 886, 510, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 463, 356, 466, 970, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 338, 283, 944, 711, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 300, 210, 763, 709, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 463, 221, 511, 448, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 362, 317, 597, 497, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 496, 221, 802, 252, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 286, 203, 846, 655, 0, 0, 1, 95, MAX_RBOUNDS,
  8, 243, 201, 382, 292, 1, 1, 1, 95, MAX_RBOUNDS,
  8, 411, 483, 647, 476, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 413, 347, 703, 282, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 242, 428, 257, 258, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 230, 379, 203, 323, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 469, 461, 309, 327, 0, 0, 0, 96, MAX_RBOUNDS,
  4, 400, 267, 525, 326, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 459, 232, 329, 618, 0, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 117044, 703252, 19993, 11783, 1, 1, 1, 99, 0,
  32, 113974, 808166, 16955, 23529, 1, 1, 1, 98, 0,
  16, 109922, 603651, 15817, 12144, 0, 1, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 7, 20, 0, 0, 0, 0, 0, 0, 0,
  20, 7, 16, 0, 0, 0, 0, 0, 0, 0,
  12, 10, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  42, 40, 5, 0, 0, 0, 0, 0, 0, 0,
  28, 39, 17, 0, 0, 0, 0, 0, 0, 0,
  28, 24, 20, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 56262;
carbBudget = 67949;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 4,
  4, 5, 6,
  2, 5, 8,
  2, 4, 8,
  4, 5, 9,
  1, 3, 5,
  3, 5, 6,
  2, 6, 9,
]);

