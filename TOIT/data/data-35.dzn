Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 292, 494, 741, 720, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 296, 324, 238, 968, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 273, 377, 703, 953, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 387, 217, 447, 445, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 391, 215, 505, 983, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 325, 429, 374, 208, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 326, 470, 752, 794, 0, 0, 0, 95, MAX_RBOUNDS,
  8, 327, 475, 705, 977, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 499, 213, 429, 584, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 256, 268, 448, 917, 0, 1, 0, 97, MAX_RBOUNDS,
  4, 321, 308, 822, 987, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 263, 231, 757, 912, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 426, 429, 396, 334, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 232, 337, 846, 927, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 436, 342, 271, 933, 1, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 115297, 215567, 20964, 15768, 1, 1, 1, 98, 0,
  16, 125548, 273884, 18750, 10387, 1, 1, 1, 99, 0,
  32, 109340, 322102, 12873, 20228, 1, 1, 1, 99, 0,
  16, 121659, 291132, 21393, 16416, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  14, 5, 24, 0, 0, 0, 0, 0, 0, 0,
  11, 5, 25, 0, 0, 0, 0, 0, 0, 0,
  15, 7, 23, 0, 0, 0, 0, 0, 0, 0,
  10, 5, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  4, 18, 3, 0, 0, 0, 0, 0, 0, 0,
  20, 11, 23, 0, 0, 0, 0, 0, 0, 0,
  36, 27, 31, 0, 0, 0, 0, 0, 0, 0,
  27, 18, 40, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 60802;
carbBudget = 69733;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 9,
  3, 4, 6,
  3, 7, 8,
  2, 3, 5,
  2, 3, 4,
  1, 2, 8,
  2, 5, 6,
]);

