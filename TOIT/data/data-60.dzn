Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 307, 418, 486, 259, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 419, 475, 202, 393, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 337, 347, 734, 730, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 219, 301, 960, 250, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 414, 437, 570, 334, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 474, 381, 673, 243, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 368, 258, 988, 405, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 269, 307, 927, 699, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 354, 409, 727, 854, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 279, 445, 457, 906, 1, 1, 1, 97, MAX_RBOUNDS,
  4, 393, 339, 877, 267, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 456, 223, 991, 963, 0, 0, 1, 97, MAX_RBOUNDS,
  4, 423, 467, 729, 622, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 333, 404, 233, 645, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 443, 229, 447, 362, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 76128, 700605, 22702, 16323, 0, 1, 1, 98, 0,
  32, 62849, 775720, 21906, 20585, 1, 1, 1, 98, 0,
  8, 80472, 491587, 13650, 12943, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 5, 23, 0, 0, 0, 0, 0, 0, 0,
  13, 10, 18, 0, 0, 0, 0, 0, 0, 0,
  19, 5, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  33, 3, 37, 0, 0, 0, 0, 0, 0, 0,
  10, 8, 17, 0, 0, 0, 0, 0, 0, 0,
  41, 12, 19, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 47626;
carbBudget = 61609;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 4,
  2, 6, 8,
  1, 6, 9,
  2, 5, 9,
  1, 2, 8,
  1, 5, 7,
  4, 6, 8,
]);

