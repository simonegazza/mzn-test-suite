Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 368, 491, 538, 916, 1, 1, 1, 96, MAX_RBOUNDS,
  8, 497, 217, 748, 810, 0, 1, 0, 97, MAX_RBOUNDS,
  2, 373, 230, 276, 226, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 315, 324, 713, 310, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 382, 211, 237, 770, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 420, 413, 536, 569, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 253, 223, 769, 696, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 410, 248, 260, 805, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 398, 477, 581, 903, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 386, 339, 438, 490, 1, 0, 1, 97, MAX_RBOUNDS,
  4, 322, 240, 825, 442, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 460, 346, 889, 908, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 479, 364, 310, 563, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 448, 328, 721, 877, 0, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 53296, 646886, 24888, 22432, 1, 1, 0, 98, 0,
  8, 22392, 610868, 24572, 11624, 1, 1, 1, 99, 0,
  32, 110405, 768869, 18885, 21080, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 7, 15, 0, 0, 0, 0, 0, 0, 0,
  16, 5, 15, 0, 0, 0, 0, 0, 0, 0,
  18, 5, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  43, 4, 35, 0, 0, 0, 0, 0, 0, 0,
  27, 44, 39, 0, 0, 0, 0, 0, 0, 0,
  37, 29, 36, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 37089;
carbBudget = 54549;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 5, 6,
  1, 2, 6,
  1, 2, 7,
  4, 7, 8,
  7, 8, 9,
  1, 3, 5,
  5, 6, 7,
]);

