Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 500, 366, 448, 272, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 399, 354, 773, 966, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 227, 366, 340, 292, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 281, 450, 860, 284, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 320, 397, 332, 886, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 400, 326, 861, 632, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 294, 500, 654, 887, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 255, 458, 833, 591, 1, 1, 1, 95, MAX_RBOUNDS,
  8, 274, 335, 854, 852, 0, 1, 0, 95, MAX_RBOUNDS,
  8, 326, 271, 354, 784, 1, 1, 0, 97, MAX_RBOUNDS,
  8, 359, 303, 481, 362, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 336, 292, 875, 611, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 388, 314, 969, 346, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 315, 433, 614, 289, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 219, 334, 936, 769, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 268, 305, 799, 919, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 275, 430, 923, 504, 1, 0, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 56387, 996493, 24934, 23943, 1, 0, 1, 99, 0,
  16, 73789, 271791, 23077, 17177, 1, 1, 1, 99, 0,
  32, 65923, 814279, 23678, 22325, 1, 1, 1, 99, 0,
  16, 110166, 869906, 21981, 16884, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 7, 23, 0, 0, 0, 0, 0, 0, 0,
  12, 7, 18, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  18, 9, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 46, 46, 0, 0, 0, 0, 0, 0, 0,
  13, 44, 11, 0, 0, 0, 0, 0, 0, 0,
  2, 34, 25, 0, 0, 0, 0, 0, 0, 0,
  4, 29, 3, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 68019;
carbBudget = 51250;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 5,
  5, 6, 8,
  4, 7, 8,
  2, 8, 9,
  1, 2, 4,
  4, 6, 8,
  1, 3, 6,
  5, 7, 9,
]);

