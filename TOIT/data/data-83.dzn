Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,1,1,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 413, 369, 499, 372, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 237, 283, 689, 608, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 408, 475, 716, 780, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 319, 390, 693, 482, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 387, 217, 259, 706, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 387, 260, 795, 649, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 343, 400, 752, 721, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 484, 345, 694, 422, 1, 0, 0, 97, MAX_RBOUNDS,
  8, 221, 411, 849, 877, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 249, 378, 583, 898, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 425, 461, 312, 946, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 300, 307, 258, 664, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 260, 397, 923, 310, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 318, 336, 978, 977, 0, 0, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 41918, 469583, 20182, 10264, 1, 1, 1, 99, 0,
  32, 34951, 953065, 24856, 13457, 1, 1, 1, 98, 0,
  16, 16233, 989619, 21641, 13933, 1, 1, 0, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  14, 5, 20, 0, 0, 0, 0, 0, 0, 0,
  15, 9, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  37, 31, 6, 0, 0, 0, 0, 0, 0, 0,
  49, 7, 41, 0, 0, 0, 0, 0, 0, 0,
  1, 25, 24, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 55893;
carbBudget = 41068;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 6,
  2, 6, 9,
  3, 8, 9,
  1, 2, 4,
  1, 3, 7,
  2, 7, 8,
  3, 5, 6,
]);

