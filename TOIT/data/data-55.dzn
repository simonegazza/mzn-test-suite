Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 227, 333, 808, 945, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 233, 307, 505, 844, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 432, 381, 840, 206, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 201, 329, 436, 526, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 368, 468, 574, 355, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 371, 500, 809, 433, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 221, 277, 639, 279, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 386, 202, 984, 474, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 327, 241, 534, 575, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 431, 297, 660, 473, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 398, 457, 639, 264, 0, 1, 1, 97, MAX_RBOUNDS,
  8, 261, 404, 212, 434, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 334, 469, 991, 221, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 448, 464, 902, 884, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 499, 409, 358, 306, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 247, 302, 866, 932, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 377, 293, 998, 896, 0, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 79189, 686522, 20181, 17748, 1, 1, 1, 99, 0,
  16, 95872, 690469, 17481, 21156, 1, 1, 0, 99, 0,
  32, 47143, 73886, 20273, 17652, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 6, 22, 0, 0, 0, 0, 0, 0, 0,
  15, 6, 16, 0, 0, 0, 0, 0, 0, 0,
  11, 8, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  3, 14, 7, 0, 0, 0, 0, 0, 0, 0,
  29, 22, 25, 0, 0, 0, 0, 0, 0, 0,
  7, 31, 6, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 54543;
carbBudget = 78362;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 4, 6,
  3, 4, 8,
  2, 3, 6,
  1, 2, 6,
  1, 7, 9,
  1, 2, 7,
  1, 4, 5,
  3, 6, 7,
]);

