Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 211, 251, 276, 286, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 201, 331, 541, 912, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 292, 453, 996, 965, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 296, 364, 351, 980, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 331, 208, 389, 540, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 475, 241, 281, 821, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 351, 256, 800, 999, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 474, 480, 223, 544, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 313, 469, 356, 704, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 478, 233, 297, 285, 1, 0, 0, 95, MAX_RBOUNDS,
  4, 369, 325, 750, 999, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 289, 493, 514, 853, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 458, 491, 555, 668, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 425, 387, 628, 691, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 428, 497, 919, 672, 0, 1, 1, 97, MAX_RBOUNDS,
  2, 471, 412, 636, 430, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 281, 478, 385, 696, 1, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 38255, 547727, 18678, 22289, 1, 1, 1, 99, 0,
  32, 82894, 668568, 23896, 22428, 1, 1, 1, 99, 0,
  16, 124570, 862831, 15519, 20671, 1, 1, 1, 99, 0,
  16, 56049, 102424, 24940, 16197, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 9, 23, 0, 0, 0, 0, 0, 0, 0,
  14, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  11, 9, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 10, 20, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  8, 9, 14, 0, 0, 0, 0, 0, 0, 0,
  19, 15, 4, 0, 0, 0, 0, 0, 0, 0,
  29, 42, 49, 0, 0, 0, 0, 0, 0, 0,
  26, 35, 1, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 41342;
carbBudget = 55285;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 9,
  3, 8, 9,
  6, 7, 9,
  1, 4, 5,
  1, 2, 5,
  4, 6, 9,
  5, 6, 8,
  1, 3, 8,
]);

