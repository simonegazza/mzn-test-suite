Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 361, 336, 906, 206, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 467, 289, 811, 968, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 353, 429, 957, 595, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 334, 383, 578, 328, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 353, 245, 693, 454, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 401, 478, 473, 494, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 260, 306, 313, 930, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 469, 289, 567, 795, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 448, 230, 932, 842, 1, 1, 0, 96, MAX_RBOUNDS,
  4, 210, 479, 499, 872, 0, 0, 0, 96, MAX_RBOUNDS,
  2, 475, 266, 336, 416, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 224, 495, 562, 467, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 216, 488, 667, 424, 0, 0, 1, 95, MAX_RBOUNDS,
  4, 490, 372, 600, 457, 1, 0, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 50930, 241478, 24689, 24157, 1, 1, 1, 98, 0,
  16, 35794, 470766, 24782, 10348, 1, 1, 1, 99, 0,
  32, 51956, 743220, 16173, 21183, 0, 0, 1, 99, 0,
  16, 56635, 536496, 16089, 13602, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  11, 10, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 6, 22, 0, 0, 0, 0, 0, 0, 0,
  10, 8, 15, 0, 0, 0, 0, 0, 0, 0,
  12, 7, 18, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 8, 12, 0, 0, 0, 0, 0, 0, 0,
  22, 7, 45, 0, 0, 0, 0, 0, 0, 0,
  24, 40, 45, 0, 0, 0, 0, 0, 0, 0,
  47, 50, 26, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 47424;
carbBudget = 66194;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  4, 5, 6,
  1, 2, 4,
  3, 7, 8,
  6, 8, 9,
  4, 5, 8,
  5, 6, 9,
  1, 3, 6,
]);

