Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,1,1,0,1,1,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 458, 499, 502, 884, 1, 0, 0, 97, MAX_RBOUNDS,
  8, 387, 426, 588, 591, 1, 1, 1, 95, MAX_RBOUNDS,
  8, 470, 472, 824, 477, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 381, 286, 533, 653, 0, 0, 0, 96, MAX_RBOUNDS,
  2, 213, 249, 415, 228, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 230, 279, 232, 563, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 388, 304, 297, 331, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 361, 458, 533, 538, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 387, 224, 670, 396, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 383, 221, 677, 482, 1, 1, 1, 95, MAX_RBOUNDS,
  4, 341, 264, 442, 214, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 292, 225, 274, 738, 0, 1, 1, 95, MAX_RBOUNDS,
  4, 466, 359, 779, 452, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 200, 235, 820, 809, 1, 1, 1, 97, MAX_RBOUNDS,
  8, 448, 427, 782, 702, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 105504, 134137, 12015, 24377, 1, 1, 0, 98, 0,
  16, 46008, 213522, 17300, 17176, 1, 1, 1, 98, 0,
  32, 44087, 407659, 13502, 17647, 1, 0, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 10, 16, 0, 0, 0, 0, 0, 0, 0,
  12, 9, 16, 0, 0, 0, 0, 0, 0, 0,
  11, 7, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  5, 36, 42, 0, 0, 0, 0, 0, 0, 0,
  41, 46, 29, 0, 0, 0, 0, 0, 0, 0,
  6, 24, 42, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 49098;
carbBudget = 64117;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 5, 8,
  1, 2, 6,
  6, 7, 9,
  1, 4, 8,
  2, 4, 5,
  1, 2, 3,
  1, 5, 8,
]);

