Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 474, 206, 411, 788, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 351, 432, 768, 446, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 343, 208, 361, 550, 1, 0, 1, 95, MAX_RBOUNDS,
  4, 465, 354, 944, 394, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 246, 409, 968, 911, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 204, 349, 522, 718, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 492, 407, 521, 932, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 424, 224, 336, 934, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 441, 348, 781, 432, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 473, 443, 676, 414, 0, 0, 1, 97, MAX_RBOUNDS,
  8, 235, 251, 616, 684, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 424, 497, 971, 955, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 450, 220, 821, 472, 0, 0, 0, 96, MAX_RBOUNDS,
  2, 416, 271, 523, 722, 1, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 99185, 438528, 15473, 20655, 1, 1, 1, 99, 0,
  16, 125139, 58696, 16155, 20811, 1, 1, 0, 99, 0,
  8, 77161, 837148, 13334, 16709, 0, 1, 0, 98, 0,
  8, 88492, 767252, 22365, 11923, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  16, 9, 21, 0, 0, 0, 0, 0, 0, 0,
  18, 8, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 10, 22, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  48, 19, 27, 0, 0, 0, 0, 0, 0, 0,
  32, 37, 44, 0, 0, 0, 0, 0, 0, 0,
  5, 2, 15, 0, 0, 0, 0, 0, 0, 0,
  17, 15, 46, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 55547;
carbBudget = 59865;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 7, 8,
  5, 6, 7,
  2, 4, 5,
  1, 2, 4,
  1, 2, 9,
  1, 2, 6,
  1, 4, 7,
]);

