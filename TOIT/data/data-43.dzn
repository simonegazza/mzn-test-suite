Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,1,1,0,1,1,0,0,
	1,1,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 384, 335, 924, 766, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 373, 320, 262, 869, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 339, 244, 923, 216, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 307, 297, 491, 492, 0, 0, 0, 96, MAX_RBOUNDS,
  4, 298, 217, 922, 628, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 390, 286, 690, 658, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 492, 328, 775, 633, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 368, 368, 264, 382, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 408, 385, 639, 822, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 270, 440, 704, 563, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 210, 381, 519, 748, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 431, 245, 801, 796, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 329, 461, 241, 558, 1, 0, 1, 95, MAX_RBOUNDS,
  8, 499, 281, 207, 964, 1, 1, 1, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 121372, 279633, 18542, 19859, 1, 1, 1, 98, 0,
  32, 65011, 552817, 12660, 17282, 1, 1, 1, 98, 0,
  16, 67538, 775913, 15178, 17189, 1, 1, 1, 99, 0,
  16, 51048, 477607, 12467, 22491, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 5, 25, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 23, 0, 0, 0, 0, 0, 0, 0,
  15, 6, 19, 0, 0, 0, 0, 0, 0, 0,
  14, 6, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  31, 29, 13, 0, 0, 0, 0, 0, 0, 0,
  32, 38, 11, 0, 0, 0, 0, 0, 0, 0,
  5, 8, 10, 0, 0, 0, 0, 0, 0, 0,
  38, 3, 10, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 59830;
carbBudget = 66278;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 4,
  3, 5, 6,
  1, 2, 7,
  2, 8, 9,
  2, 6, 8,
  4, 6, 8,
  3, 6, 9,
]);

