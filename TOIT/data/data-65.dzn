Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 259, 207, 210, 634, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 251, 266, 745, 293, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 349, 471, 225, 764, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 223, 329, 256, 883, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 217, 212, 987, 803, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 267, 475, 439, 500, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 240, 261, 458, 454, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 344, 464, 519, 912, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 424, 483, 755, 430, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 479, 358, 462, 523, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 490, 266, 368, 744, 0, 0, 1, 96, MAX_RBOUNDS,
  2, 279, 488, 978, 770, 1, 1, 0, 96, MAX_RBOUNDS,
  4, 248, 290, 371, 445, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 249, 202, 858, 418, 1, 0, 0, 96, MAX_RBOUNDS,
  8, 254, 269, 393, 419, 0, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 54432, 768217, 11581, 13283, 1, 1, 0, 99, 0,
  16, 45736, 438612, 23055, 10983, 1, 0, 1, 99, 0,
  32, 45400, 887036, 19187, 23375, 1, 1, 1, 99, 0,
  16, 54460, 715042, 15421, 21675, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 9, 21, 0, 0, 0, 0, 0, 0, 0,
  10, 8, 16, 0, 0, 0, 0, 0, 0, 0,
  14, 8, 19, 0, 0, 0, 0, 0, 0, 0,
  10, 8, 24, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  17, 16, 25, 0, 0, 0, 0, 0, 0, 0,
  22, 14, 3, 0, 0, 0, 0, 0, 0, 0,
  8, 11, 6, 0, 0, 0, 0, 0, 0, 0,
  25, 18, 30, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 65499;
carbBudget = 43703;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 7, 8,
  2, 6, 8,
  3, 5, 8,
  3, 8, 9,
  2, 8, 9,
  5, 8, 9,
  2, 6, 7,
]);

