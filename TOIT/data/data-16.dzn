Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,
	1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 405, 437, 550, 462, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 248, 422, 639, 270, 1, 0, 0, 97, MAX_RBOUNDS,
  4, 217, 446, 515, 810, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 494, 253, 733, 674, 0, 1, 0, 95, MAX_RBOUNDS,
  4, 227, 405, 966, 300, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 448, 257, 945, 244, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 202, 430, 454, 411, 0, 1, 1, 97, MAX_RBOUNDS,
  4, 446, 242, 971, 592, 0, 1, 1, 96, MAX_RBOUNDS,
  8, 465, 281, 371, 385, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 347, 276, 979, 549, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 281, 407, 347, 655, 0, 1, 1, 96, MAX_RBOUNDS,
  4, 460, 286, 241, 893, 1, 0, 1, 96, MAX_RBOUNDS,
  4, 218, 350, 287, 994, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 268, 458, 273, 851, 0, 0, 0, 97, MAX_RBOUNDS,
  2, 431, 230, 381, 396, 0, 1, 0, 96, MAX_RBOUNDS,
  2, 373, 432, 703, 843, 0, 0, 1, 97, MAX_RBOUNDS,
  2, 465, 378, 832, 640, 1, 1, 1, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 19268, 280404, 13809, 20463, 1, 1, 1, 99, 0,
  16, 47251, 381096, 19861, 19242, 1, 1, 1, 99, 0,
  16, 74228, 782740, 17890, 20266, 1, 1, 1, 98, 0,
  16, 28172, 578130, 10117, 23402, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 9, 21, 0, 0, 0, 0, 0, 0, 0,
  17, 7, 20, 0, 0, 0, 0, 0, 0, 0,
  13, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  16, 10, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  49, 4, 38, 0, 0, 0, 0, 0, 0, 0,
  12, 48, 27, 0, 0, 0, 0, 0, 0, 0,
  41, 20, 13, 0, 0, 0, 0, 0, 0, 0,
  31, 23, 43, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 40627;
carbBudget = 79976;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  6, 7, 8,
  3, 5, 7,
  6, 7, 8,
  1, 2, 7,
  1, 8, 9,
  3, 4, 5,
  5, 6, 9,
  1, 3, 4,
]);

