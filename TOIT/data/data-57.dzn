Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
	0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 479, 322, 226, 316, 1, 0, 0, 96, MAX_RBOUNDS,
  4, 396, 211, 668, 662, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 428, 305, 686, 983, 1, 1, 0, 96, MAX_RBOUNDS,
  8, 343, 287, 974, 994, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 305, 469, 964, 434, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 255, 459, 279, 359, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 272, 346, 404, 683, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 318, 234, 949, 569, 0, 0, 0, 95, MAX_RBOUNDS,
  8, 236, 349, 621, 673, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 378, 232, 798, 693, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 306, 406, 505, 799, 1, 0, 1, 96, MAX_RBOUNDS,
  8, 494, 425, 395, 248, 0, 0, 0, 95, MAX_RBOUNDS,
  2, 292, 242, 550, 209, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 338, 449, 933, 276, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 266, 344, 300, 762, 1, 1, 0, 95, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 17885, 105412, 10623, 14407, 1, 1, 1, 99, 0,
  32, 63524, 775322, 12343, 14487, 1, 1, 1, 99, 0,
  16, 127505, 71209, 15174, 23117, 1, 1, 1, 98, 0,
  32, 127383, 626770, 19502, 14696, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 7, 20, 0, 0, 0, 0, 0, 0, 0,
  20, 7, 22, 0, 0, 0, 0, 0, 0, 0,
  12, 8, 18, 0, 0, 0, 0, 0, 0, 0,
  20, 8, 15, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  40, 36, 48, 0, 0, 0, 0, 0, 0, 0,
  31, 46, 7, 0, 0, 0, 0, 0, 0, 0,
  42, 28, 6, 0, 0, 0, 0, 0, 0, 0,
  43, 19, 22, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 61546;
carbBudget = 48723;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 6, 8,
  6, 7, 8,
  1, 2, 8,
  2, 5, 7,
  3, 6, 9,
  1, 6, 7,
  1, 2, 6,
]);

