Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 398, 274, 591, 676, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 279, 369, 892, 962, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 280, 480, 338, 523, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 328, 455, 627, 308, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 422, 379, 851, 818, 1, 1, 0, 96, MAX_RBOUNDS,
  2, 357, 424, 482, 252, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 437, 302, 251, 797, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 456, 328, 347, 205, 1, 0, 0, 96, MAX_RBOUNDS,
  4, 437, 378, 832, 377, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 473, 479, 353, 991, 1, 0, 0, 96, MAX_RBOUNDS,
  4, 250, 338, 437, 556, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 491, 319, 836, 249, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 449, 296, 361, 328, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 327, 330, 711, 384, 0, 0, 1, 95, MAX_RBOUNDS,
  2, 363, 308, 219, 869, 1, 1, 0, 96, MAX_RBOUNDS,
  4, 380, 300, 407, 653, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 382, 442, 572, 633, 1, 0, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 59325, 904117, 18819, 20139, 1, 1, 1, 99, 0,
  32, 83864, 206754, 14565, 15848, 1, 0, 1, 99, 0,
  16, 19774, 255891, 21445, 11293, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 6, 17, 0, 0, 0, 0, 0, 0, 0,
  19, 10, 24, 0, 0, 0, 0, 0, 0, 0,
  13, 5, 21, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 49, 19, 0, 0, 0, 0, 0, 0, 0,
  2, 39, 2, 0, 0, 0, 0, 0, 0, 0,
  20, 1, 36, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 68435;
carbBudget = 61330;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 3,
  2, 3, 9,
  6, 8, 9,
  1, 2, 5,
  4, 5, 7,
  1, 2, 7,
  1, 2, 7,
  2, 4, 8,
]);

