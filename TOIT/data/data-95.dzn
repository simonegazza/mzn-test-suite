Comps = {frontend0, frontend1, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,
	1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 486, 401, 200, 825, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 347, 226, 317, 832, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 390, 224, 464, 544, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 315, 433, 501, 279, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 470, 419, 892, 765, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 441, 495, 244, 962, 1, 1, 0, 97, MAX_RBOUNDS,
  4, 318, 361, 884, 646, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 255, 208, 205, 457, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 338, 290, 633, 941, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 332, 316, 573, 824, 1, 1, 0, 95, MAX_RBOUNDS,
  4, 213, 459, 420, 974, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 423, 206, 963, 539, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 240, 241, 501, 1000, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 349, 267, 780, 472, 1, 1, 0, 95, MAX_RBOUNDS,
  8, 382, 448, 898, 351, 1, 1, 0, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 27506, 970470, 18996, 20946, 1, 0, 1, 98, 0,
  16, 96880, 120949, 19098, 16524, 1, 1, 1, 99, 0,
  32, 108305, 234825, 16180, 16683, 0, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  14, 9, 18, 0, 0, 0, 0, 0, 0, 0,
  18, 8, 17, 0, 0, 0, 0, 0, 0, 0,
  20, 6, 25, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  3, 25, 31, 0, 0, 0, 0, 0, 0, 0,
  40, 30, 50, 0, 0, 0, 0, 0, 0, 0,
  22, 33, 41, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 61527;
carbBudget = 68217;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 6, 9,
  2, 4, 5,
  2, 6, 7,
  2, 7, 9,
  3, 5, 7,
  1, 4, 6,
  3, 5, 8,
]);

