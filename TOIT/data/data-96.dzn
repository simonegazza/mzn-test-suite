Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,1,1,0,1,1,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 496, 477, 649, 811, 0, 1, 1, 96, MAX_RBOUNDS,
  2, 445, 444, 967, 939, 1, 0, 1, 97, MAX_RBOUNDS,
  2, 373, 487, 716, 723, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 258, 289, 364, 696, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 331, 303, 396, 805, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 500, 215, 546, 365, 0, 1, 0, 97, MAX_RBOUNDS,
  4, 226, 259, 817, 982, 1, 1, 1, 96, MAX_RBOUNDS,
  2, 371, 410, 843, 420, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 214, 227, 241, 376, 1, 0, 0, 95, MAX_RBOUNDS,
  8, 332, 464, 810, 779, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 437, 498, 368, 957, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 322, 355, 483, 614, 1, 0, 0, 96, MAX_RBOUNDS,
  2, 258, 354, 407, 230, 1, 1, 0, 97, MAX_RBOUNDS,
  2, 484, 228, 661, 617, 1, 1, 0, 97, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 105638, 433602, 16416, 15699, 1, 1, 1, 98, 0,
  16, 112955, 575227, 19419, 20016, 1, 1, 1, 98, 0,
  16, 95870, 503789, 24941, 16067, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 10, 23, 0, 0, 0, 0, 0, 0, 0,
  14, 5, 15, 0, 0, 0, 0, 0, 0, 0,
  18, 5, 17, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  29, 16, 25, 0, 0, 0, 0, 0, 0, 0,
  41, 38, 45, 0, 0, 0, 0, 0, 0, 0,
  39, 46, 9, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 40018;
carbBudget = 49934;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 3, 4,
  2, 5, 8,
  4, 6, 9,
  3, 4, 6,
  2, 4, 8,
  1, 2, 4,
  2, 5, 6,
]);

