Comps = {frontend0, frontend1, frontend2, backend0, backend1, backend2, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = array2d(CompFlavs, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
mayUse = array2d(Comps, CompFlavs, [
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
	1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]);
MIN_RBOUNDS = 0;
MAX_RBOUNDS = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_RBOUNDS];
bestBounds = [MAX_RBOUNDS - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 328, 277, 909, 287, 1, 1, 1, 97, MAX_RBOUNDS,
  2, 264, 350, 945, 869, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 322, 354, 677, 331, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 490, 206, 276, 619, 0, 1, 0, 95, MAX_RBOUNDS,
  2, 204, 336, 244, 797, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 211, 422, 580, 557, 1, 1, 0, 95, MAX_RBOUNDS,
  2, 240, 484, 815, 884, 1, 1, 1, 95, MAX_RBOUNDS,
  2, 411, 414, 349, 442, 1, 0, 1, 97, MAX_RBOUNDS,
  8, 350, 461, 623, 749, 1, 1, 1, 96, MAX_RBOUNDS,
  4, 378, 259, 689, 321, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 217, 414, 646, 597, 1, 0, 1, 96, MAX_RBOUNDS,
  2, 261, 474, 884, 407, 1, 0, 1, 95, MAX_RBOUNDS,
  2, 478, 463, 576, 512, 1, 0, 0, 95, MAX_RBOUNDS,
  2, 291, 243, 757, 922, 1, 0, 0, 97, MAX_RBOUNDS,
  2, 284, 235, 922, 216, 0, 1, 1, 95, MAX_RBOUNDS,
  2, 286, 221, 462, 311, 0, 1, 0, 96, MAX_RBOUNDS,
  8, 299, 214, 345, 768, 0, 1, 1, 96, MAX_RBOUNDS,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 110271, 489054, 14768, 23813, 1, 1, 0, 99, 0,
  16, 16094, 457653, 10768, 10773, 1, 1, 1, 99, 0,
  16, 90982, 941048, 21730, 23658, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 6, 15, 0, 0, 0, 0, 0, 0, 0,
  18, 7, 24, 0, 0, 0, 0, 0, 0, 0,
  17, 5, 16, 0, 0, 0, 0, 0, 0, 0,
]);

carb = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  30, 12, 44, 0, 0, 0, 0, 0, 0, 0,
  2, 29, 48, 0, 0, 0, 0, 0, 0, 0,
  4, 31, 14, 0, 0, 0, 0, 0, 0, 0,
]);

costBudget = 43301;
carbBudget = 44727;

depReq = array4d(Comps, Flavs, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend2 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend2 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend2 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, i in Flavs, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 6, 9,
  1, 2, 7,
  1, 3, 6,
  1, 3, 8,
  3, 5, 9,
  1, 3, 4,
  2, 3, 5,
  2, 3, 6,
]);

