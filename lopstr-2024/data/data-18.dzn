Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend0}, {backend0}, {backend0}, {backend0}, {}, {}, {database1}, {database0}, {database1}, {database0}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 251, 499, 955, 672, 0, 1, 1, 97, MAX_BOUND,
  8, 460, 412, 593, 792, 1, 1, 0, 97, MAX_BOUND,
  2, 272, 262, 891, 949, 1, 1, 1, 96, MAX_BOUND,
  2, 345, 410, 990, 921, 1, 1, 1, 97, MAX_BOUND,
  8, 466, 334, 743, 856, 1, 1, 1, 95, MAX_BOUND,
  2, 484, 216, 631, 768, 1, 0, 0, 95, MAX_BOUND,
  2, 448, 381, 434, 498, 1, 1, 1, 97, MAX_BOUND,
  2, 393, 376, 922, 632, 0, 1, 1, 97, MAX_BOUND,
  2, 305, 239, 675, 426, 1, 0, 1, 96, MAX_BOUND,
  2, 386, 326, 431, 893, 1, 1, 1, 95, MAX_BOUND,
  2, 229, 236, 525, 272, 0, 0, 1, 96, MAX_BOUND,
  2, 402, 285, 232, 340, 0, 1, 0, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 93913, 435821, 17706, 11333, 1, 1, 1, 99, 0,
  32, 83975, 162553, 18634, 12817, 1, 1, 1, 98, 0,
  32, 111146, 844306, 14388, 17002, 1, 0, 1, 98, 0,
  16, 39106, 74186, 10545, 19600, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 10, 21, 0, 0, 0, 0, 0, 0, 0,
  11, 7, 16, 0, 0, 0, 0, 0, 0, 0,
  17, 6, 18, 0, 0, 0, 0, 0, 0, 0,
  19, 7, 16, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  8, 45, 24, 0, 0, 0, 0, 0, 0, 0,
  16, 40, 24, 0, 0, 0, 0, 0, 0, 0,
  15, 20, 44, 0, 0, 0, 0, 0, 0, 0,
  27, 39, 10, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 37720;
consBudget = 42361;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 9, 10,
  1, 3, 8,
  3, 7, 9,
  2, 3, 7,
  6, 7, 8,
  2, 6, 9,
]);

