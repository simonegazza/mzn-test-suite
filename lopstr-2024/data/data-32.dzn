Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend0}, {backend1}, {backend0}, {}, {}, {database1}, {database1}, {database1}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 311, 288, 323, 816, 0, 0, 1, 95, MAX_BOUND,
  2, 382, 314, 696, 945, 1, 0, 0, 97, MAX_BOUND,
  2, 356, 332, 225, 500, 1, 0, 0, 96, MAX_BOUND,
  4, 404, 410, 312, 522, 1, 1, 0, 96, MAX_BOUND,
  2, 432, 330, 879, 882, 1, 0, 0, 97, MAX_BOUND,
  2, 228, 465, 375, 686, 1, 0, 0, 97, MAX_BOUND,
  2, 357, 364, 801, 488, 0, 1, 1, 96, MAX_BOUND,
  4, 429, 409, 770, 844, 1, 1, 0, 96, MAX_BOUND,
  2, 358, 217, 606, 981, 1, 1, 1, 96, MAX_BOUND,
  4, 440, 484, 836, 751, 1, 1, 1, 97, MAX_BOUND,
  2, 238, 433, 729, 592, 1, 0, 1, 97, MAX_BOUND,
  2, 402, 242, 844, 228, 1, 0, 1, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 96186, 744883, 18345, 16400, 1, 1, 1, 99, 0,
  32, 18661, 187059, 13007, 16888, 1, 1, 1, 98, 0,
  8, 107161, 275766, 21374, 11546, 1, 0, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 5, 16, 0, 0, 0, 0, 0, 0, 0,
  20, 5, 21, 0, 0, 0, 0, 0, 0, 0,
  10, 10, 15, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  26, 50, 5, 0, 0, 0, 0, 0, 0, 0,
  18, 21, 8, 0, 0, 0, 0, 0, 0, 0,
  39, 12, 5, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 39692;
consBudget = 55038;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 6, 10,
  8, 9, 10,
  3, 9, 10,
  6, 8, 10,
  2, 6, 9,
  4, 8, 10,
]);

