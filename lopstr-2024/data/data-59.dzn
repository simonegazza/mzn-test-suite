Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend0}, {backend1}, {backend0}, {backend1}, {}, {}, {database1}, {database0}, {database1}, {database0}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 411, 323, 645, 777, 1, 0, 1, 96, MAX_BOUND,
  4, 221, 350, 505, 227, 1, 1, 1, 96, MAX_BOUND,
  2, 285, 432, 275, 620, 1, 1, 0, 97, MAX_BOUND,
  2, 238, 466, 873, 854, 1, 1, 1, 96, MAX_BOUND,
  2, 222, 380, 560, 212, 1, 0, 0, 96, MAX_BOUND,
  2, 270, 376, 876, 543, 1, 1, 0, 96, MAX_BOUND,
  2, 400, 364, 215, 384, 1, 0, 0, 95, MAX_BOUND,
  2, 460, 339, 700, 447, 1, 0, 1, 96, MAX_BOUND,
  2, 237, 311, 798, 978, 1, 1, 0, 96, MAX_BOUND,
  2, 328, 289, 614, 979, 1, 1, 0, 96, MAX_BOUND,
  4, 414, 299, 230, 569, 1, 1, 1, 95, MAX_BOUND,
  2, 492, 451, 692, 653, 0, 0, 1, 96, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 23680, 637781, 23543, 15539, 1, 1, 1, 98, 0,
  32, 76009, 548737, 23690, 15555, 1, 1, 1, 99, 0,
  8, 32899, 585652, 20363, 19744, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  10, 7, 15, 0, 0, 0, 0, 0, 0, 0,
  17, 5, 25, 0, 0, 0, 0, 0, 0, 0,
  14, 6, 24, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  47, 42, 22, 0, 0, 0, 0, 0, 0, 0,
  2, 49, 2, 0, 0, 0, 0, 0, 0, 0,
  12, 14, 1, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 51303;
consBudget = 49738;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 6, 7,
  2, 7, 9,
  4, 5, 10,
  1, 3, 10,
  1, 4, 9,
  1, 2, 6,
]);

