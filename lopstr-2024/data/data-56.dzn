Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend1}, {backend1}, {}, {}, {database0}, {database1}, {database0}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 262, 367, 440, 220, 0, 0, 1, 97, MAX_BOUND,
  4, 448, 470, 633, 788, 0, 1, 0, 96, MAX_BOUND,
  2, 251, 329, 816, 294, 1, 0, 0, 96, MAX_BOUND,
  4, 422, 433, 245, 510, 0, 1, 1, 96, MAX_BOUND,
  2, 433, 490, 916, 785, 1, 1, 0, 95, MAX_BOUND,
  4, 468, 218, 813, 917, 1, 1, 1, 96, MAX_BOUND,
  4, 386, 318, 708, 234, 1, 0, 0, 95, MAX_BOUND,
  2, 407, 232, 710, 309, 1, 1, 0, 95, MAX_BOUND,
  2, 267, 232, 695, 349, 0, 1, 1, 96, MAX_BOUND,
  4, 497, 209, 220, 865, 1, 1, 0, 96, MAX_BOUND,
  2, 256, 249, 811, 287, 0, 1, 1, 97, MAX_BOUND,
  4, 380, 467, 992, 911, 1, 1, 0, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 82587, 110307, 24953, 16063, 1, 1, 1, 99, 0,
  32, 46764, 220761, 24860, 17675, 1, 1, 1, 98, 0,
  8, 46097, 948908, 16862, 13884, 1, 1, 1, 99, 0,
  32, 56596, 242302, 20850, 24039, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 6, 22, 0, 0, 0, 0, 0, 0, 0,
  13, 8, 17, 0, 0, 0, 0, 0, 0, 0,
  20, 8, 20, 0, 0, 0, 0, 0, 0, 0,
  19, 9, 19, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 42, 33, 0, 0, 0, 0, 0, 0, 0,
  38, 20, 9, 0, 0, 0, 0, 0, 0, 0,
  24, 12, 45, 0, 0, 0, 0, 0, 0, 0,
  20, 27, 1, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 59964;
consBudget = 46537;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  5, 6, 8,
  8, 9, 10,
  5, 7, 9,
  2, 6, 9,
  7, 8, 9,
  6, 8, 9,
]);

