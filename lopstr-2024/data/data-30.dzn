Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend1}, {backend1}, {backend1}, {backend1}, {}, {}, {database0}, {database1}, {database0}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  4, 427, 263, 392, 728, 1, 1, 0, 96, MAX_BOUND,
  2, 236, 315, 762, 542, 1, 0, 1, 96, MAX_BOUND,
  2, 229, 221, 721, 614, 1, 0, 0, 97, MAX_BOUND,
  8, 365, 377, 751, 528, 0, 0, 0, 96, MAX_BOUND,
  2, 288, 390, 923, 341, 1, 1, 1, 96, MAX_BOUND,
  4, 445, 325, 605, 634, 1, 1, 0, 95, MAX_BOUND,
  2, 271, 202, 984, 387, 1, 1, 0, 96, MAX_BOUND,
  2, 233, 396, 408, 301, 1, 0, 1, 97, MAX_BOUND,
  2, 461, 393, 497, 510, 1, 1, 1, 97, MAX_BOUND,
  8, 424, 334, 649, 646, 0, 1, 1, 97, MAX_BOUND,
  8, 369, 469, 527, 533, 1, 0, 1, 97, MAX_BOUND,
  2, 222, 246, 613, 786, 0, 1, 0, 96, MAX_BOUND,
  2, 217, 493, 249, 787, 1, 1, 0, 97, MAX_BOUND,
  2, 425, 243, 279, 587, 1, 1, 0, 97, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 43303, 255388, 18392, 10594, 1, 1, 1, 98, 0,
  32, 87618, 954125, 12504, 24244, 1, 1, 1, 98, 0,
  8, 59771, 675143, 14233, 14712, 0, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 8, 23, 0, 0, 0, 0, 0, 0, 0,
  12, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  19, 10, 18, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  25, 49, 48, 0, 0, 0, 0, 0, 0, 0,
  30, 38, 16, 0, 0, 0, 0, 0, 0, 0,
  16, 19, 16, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 55381;
consBudget = 35005;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    97
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  2, 3, 5,
  1, 4, 6,
  3, 5, 6,
  3, 4, 10,
  1, 3, 9,
  1, 4, 10,
  2, 6, 10,
]);

