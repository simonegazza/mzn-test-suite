Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend0}, {backend0}, {backend1}, {backend0}, {backend0}, {backend1}, {}, {}, {database0}, {database0}, {database0}, {database0}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 453, 468, 518, 412, 0, 1, 1, 95, MAX_BOUND,
  4, 234, 257, 401, 704, 0, 1, 0, 95, MAX_BOUND,
  2, 295, 280, 361, 978, 1, 1, 1, 97, MAX_BOUND,
  4, 418, 321, 296, 266, 0, 0, 1, 97, MAX_BOUND,
  2, 327, 408, 492, 556, 0, 0, 1, 97, MAX_BOUND,
  4, 210, 336, 379, 703, 1, 0, 0, 97, MAX_BOUND,
  2, 301, 240, 285, 819, 1, 1, 0, 97, MAX_BOUND,
  2, 335, 436, 560, 729, 0, 1, 1, 97, MAX_BOUND,
  2, 429, 276, 715, 466, 0, 1, 1, 97, MAX_BOUND,
  2, 275, 381, 421, 218, 1, 1, 0, 96, MAX_BOUND,
  2, 238, 450, 812, 404, 1, 0, 1, 97, MAX_BOUND,
  2, 354, 226, 942, 592, 1, 1, 1, 96, MAX_BOUND,
  2, 328, 365, 427, 772, 1, 1, 1, 97, MAX_BOUND,
  4, 254, 401, 519, 931, 1, 1, 1, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 63574, 324587, 19299, 23759, 1, 1, 1, 98, 0,
  16, 110162, 947458, 12166, 20096, 1, 1, 1, 98, 0,
  16, 89433, 626991, 14623, 14541, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  12, 7, 17, 0, 0, 0, 0, 0, 0, 0,
  19, 9, 15, 0, 0, 0, 0, 0, 0, 0,
  14, 9, 15, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  47, 30, 28, 0, 0, 0, 0, 0, 0, 0,
  50, 48, 49, 0, 0, 0, 0, 0, 0, 0,
  3, 35, 10, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 36101;
consBudget = 43898;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 5,
  1, 2, 3,
  2, 4, 9,
  1, 3, 6,
  2, 5, 9,
  1, 2, 9,
  2, 3, 6,
]);

