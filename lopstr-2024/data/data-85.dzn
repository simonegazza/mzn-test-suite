Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3, n4};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend1}, {backend1}, {}, {}, {database0}, {database1}, {database0}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 424, 226, 299, 834, 0, 1, 0, 96, MAX_BOUND,
  2, 282, 247, 772, 209, 1, 0, 0, 96, MAX_BOUND,
  4, 330, 480, 593, 371, 1, 1, 0, 95, MAX_BOUND,
  2, 282, 212, 487, 926, 0, 1, 1, 95, MAX_BOUND,
  2, 298, 385, 621, 640, 0, 0, 1, 97, MAX_BOUND,
  2, 272, 312, 446, 859, 0, 0, 0, 95, MAX_BOUND,
  2, 250, 499, 708, 402, 1, 0, 1, 95, MAX_BOUND,
  2, 393, 203, 862, 739, 0, 0, 1, 95, MAX_BOUND,
  2, 232, 272, 757, 801, 1, 0, 1, 96, MAX_BOUND,
  2, 254, 360, 839, 575, 0, 0, 0, 97, MAX_BOUND,
  2, 283, 481, 214, 582, 1, 0, 1, 95, MAX_BOUND,
  2, 495, 274, 524, 464, 1, 1, 0, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 78002, 288433, 11213, 18742, 1, 1, 1, 98, 0,
  16, 102455, 800304, 15419, 18768, 1, 1, 1, 98, 0,
  32, 113908, 469943, 21886, 21095, 1, 0, 1, 99, 0,
  32, 122507, 819965, 15357, 21622, 1, 1, 1, 98, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  15, 7, 25, 0, 0, 0, 0, 0, 0, 0,
  15, 5, 19, 0, 0, 0, 0, 0, 0, 0,
  18, 8, 19, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  18, 6, 47, 0, 0, 0, 0, 0, 0, 0,
  26, 45, 12, 0, 0, 0, 0, 0, 0, 0,
  23, 33, 42, 0, 0, 0, 0, 0, 0, 0,
  14, 5, 15, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 55016;
consBudget = 31514;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n3, n4} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n4} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  3, 8, 10,
  1, 5, 9,
  3, 4, 10,
  1, 4, 9,
  3, 9, 10,
  2, 5, 6,
]);

