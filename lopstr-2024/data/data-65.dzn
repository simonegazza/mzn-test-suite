Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend1}, {backend1}, {}, {}, {database1}, {database1}, {database1}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 395, 414, 801, 571, 1, 0, 1, 96, MAX_BOUND,
  2, 243, 375, 428, 285, 0, 0, 1, 97, MAX_BOUND,
  4, 218, 477, 244, 513, 1, 0, 0, 97, MAX_BOUND,
  2, 404, 374, 532, 297, 0, 0, 1, 96, MAX_BOUND,
  8, 333, 436, 650, 775, 0, 0, 1, 96, MAX_BOUND,
  2, 483, 290, 411, 855, 0, 1, 0, 95, MAX_BOUND,
  8, 480, 372, 431, 510, 1, 1, 1, 96, MAX_BOUND,
  2, 291, 448, 418, 831, 1, 1, 1, 96, MAX_BOUND,
  8, 354, 272, 771, 588, 1, 0, 0, 95, MAX_BOUND,
  2, 406, 493, 927, 577, 1, 0, 1, 95, MAX_BOUND,
  4, 336, 469, 805, 340, 0, 1, 0, 97, MAX_BOUND,
  2, 332, 276, 594, 374, 1, 1, 0, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  32, 19606, 959014, 10751, 12105, 1, 1, 1, 99, 0,
  16, 29635, 969591, 13363, 20239, 1, 1, 1, 98, 0,
  32, 77503, 772021, 20505, 16162, 1, 0, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  19, 8, 23, 0, 0, 0, 0, 0, 0, 0,
  16, 6, 25, 0, 0, 0, 0, 0, 0, 0,
  15, 5, 15, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  14, 39, 47, 0, 0, 0, 0, 0, 0, 0,
  21, 10, 18, 0, 0, 0, 0, 0, 0, 0,
  43, 38, 17, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 34745;
consBudget = 36425;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    98
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 9,
  2, 6, 7,
  2, 3, 5,
  2, 8, 9,
  3, 6, 10,
  3, 5, 9,
]);

