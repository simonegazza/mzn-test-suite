Comps = {frontend0, frontend1, frontend2, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1, frontend2};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend0}, {backend1}, {backend1}, {backend0}, {}, {}, {database1}, {database0}, {database1}, {database0}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 277, 457, 764, 294, 1, 0, 0, 95, MAX_BOUND,
  2, 329, 368, 224, 760, 0, 0, 0, 95, MAX_BOUND,
  4, 451, 436, 932, 499, 1, 1, 0, 95, MAX_BOUND,
  8, 329, 254, 637, 879, 1, 0, 1, 95, MAX_BOUND,
  2, 307, 202, 836, 263, 1, 0, 1, 97, MAX_BOUND,
  4, 226, 215, 987, 714, 0, 1, 1, 95, MAX_BOUND,
  2, 344, 373, 913, 761, 1, 1, 1, 96, MAX_BOUND,
  2, 487, 261, 678, 853, 1, 1, 1, 97, MAX_BOUND,
  8, 320, 454, 274, 321, 1, 0, 0, 96, MAX_BOUND,
  2, 452, 459, 982, 324, 1, 1, 0, 97, MAX_BOUND,
  4, 266, 326, 593, 312, 1, 1, 1, 96, MAX_BOUND,
  2, 222, 236, 256, 641, 0, 1, 0, 95, MAX_BOUND,
  2, 463, 407, 432, 559, 1, 0, 0, 97, MAX_BOUND,
  2, 249, 234, 602, 521, 1, 1, 1, 96, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  16, 68769, 391158, 21382, 15244, 1, 0, 0, 99, 0,
  16, 55433, 833692, 12936, 19090, 0, 1, 1, 99, 0,
  16, 94847, 506097, 19685, 24488, 1, 0, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  20, 10, 24, 0, 0, 0, 0, 0, 0, 0,
  14, 8, 16, 0, 0, 0, 0, 0, 0, 0,
  15, 10, 25, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  36, 3, 21, 0, 0, 0, 0, 0, 0, 0,
  3, 49, 2, 0, 0, 0, 0, 0, 0, 0,
  27, 2, 17, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 60255;
consBudget = 43069;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend2 /\ c2 = backend0 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    96
  elseif c1 = frontend2 /\ c2 = backend1 /\ r = N(avail) then
    97
  elseif c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    95
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  1, 2, 4,
  2, 6, 10,
  5, 8, 10,
  3, 4, 10,
  1, 3, 9,
  6, 7, 8,
  5, 6, 10,
]);

