Comps = {frontend0, frontend1, backend0, backend1, database0, database1};
mustComps = {frontend0, frontend1};
Flavs = {tiny, medium, large};
Nodes = {n1, n2, n3};
CRes = {CPU, RAM, storage, bwIn, bwOut};
NRes = {ssl, fwall, encr, avail, latency};
Flav = [{medium, large}, {medium, large}, {tiny, medium, large}, {tiny, medium, large}, {large}, {large}];
Uses = [{backend1}, {backend1}, {backend1}, {backend1}, {}, {}, {database0}, {database1}, {database0}, {database1}, {}, {}];
MAX_BOUND = 1000000;

worstBounds = [0, 0, 0, 0, 0, 0, 0, 0, 0, MAX_BOUND];
bestBounds = [MAX_BOUND - i | i in worstBounds];

comReq = array2d(CompFlavs, Res, [
  2, 329, 369, 519, 543, 1, 0, 0, 95, MAX_BOUND,
  2, 470, 270, 723, 316, 1, 0, 1, 97, MAX_BOUND,
  4, 367, 297, 657, 627, 1, 0, 1, 97, MAX_BOUND,
  2, 464, 283, 545, 959, 1, 1, 0, 97, MAX_BOUND,
  8, 269, 351, 905, 263, 1, 0, 0, 97, MAX_BOUND,
  2, 405, 352, 984, 844, 1, 1, 0, 95, MAX_BOUND,
  4, 231, 354, 954, 623, 1, 1, 0, 97, MAX_BOUND,
  2, 206, 455, 971, 403, 1, 0, 0, 96, MAX_BOUND,
  2, 494, 369, 590, 400, 1, 0, 1, 97, MAX_BOUND,
  8, 499, 222, 408, 537, 1, 0, 0, 95, MAX_BOUND,
  8, 247, 230, 955, 214, 0, 1, 1, 96, MAX_BOUND,
  2, 379, 262, 520, 784, 1, 0, 0, 95, MAX_BOUND,
]);

nodeCap = array2d(Nodes0, Res, [bestBounds[r] | r in Res] ++ [
  8, 93230, 421271, 17457, 19360, 1, 0, 1, 98, 0,
  16, 83637, 539651, 15546, 15433, 1, 1, 1, 98, 0,
  32, 20670, 528177, 13757, 24269, 1, 1, 1, 99, 0,
]);

cost = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  15, 5, 21, 0, 0, 0, 0, 0, 0, 0,
  19, 5, 24, 0, 0, 0, 0, 0, 0, 0,
  19, 10, 16, 0, 0, 0, 0, 0, 0, 0,
]);

cons = array2d(Nodes0, Res, [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, % no node
  13, 43, 7, 0, 0, 0, 0, 0, 0, 0,
  10, 28, 40, 0, 0, 0, 0, 0, 0, 0,
  11, 49, 2, 0, 0, 0, 0, 0, 0, 0,
]);

costWeight = 0;
consWeight = 1;

costBudget = 51254;
consBudget = 58742;

depReq = array3d(Comps, Comps, Res, [
  if c1 = frontend0 /\ c2 = backend1 /\ r = N(avail) then
    95
  elseif c1 = frontend0 /\ c2 = backend0 /\ r = N(avail) then
    97
  elseif c1 = frontend1 /\ c2 = backend1 /\ r = N(avail) then
    96
  elseif c1 = frontend1 /\ c2 = backend0 /\ r = N(avail) then
    96
  else
    worstBounds[r]
  endif | c1 in Comps, c2 in Comps, r in Res]);

linkCap = array3d(Nodes0, Nodes0, Res, [
  if ni = 0 \/ nj = 0 then
    bestBounds[r]
  elseif ni = nj /\ r = N(avail) then
    nodeCap[ni,r]
  elseif {ni, nj} = {n1, n3} /\ r = N(avail) then
    99
  elseif {ni, nj} = {n1, n2} /\ r = N(avail) then
    98
  elseif {ni, nj} = {n2, n3} /\ r = N(avail) then
    99
  else
    worstBounds[r]
  endif | ni in Nodes0, nj in Nodes0, r in Res]);

imp = array2d(Comps, Flavs, [
  7, 9, 10,
  5, 6, 8,
  2, 4, 9,
  1, 3, 6,
  1, 2, 6,
  2, 3, 10,
]);

